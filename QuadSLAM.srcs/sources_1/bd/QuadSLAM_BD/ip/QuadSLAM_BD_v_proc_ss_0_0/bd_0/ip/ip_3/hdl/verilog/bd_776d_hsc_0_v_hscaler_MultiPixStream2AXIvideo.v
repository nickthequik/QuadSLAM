// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        StrmMPix_V_val_V_dout,
        StrmMPix_V_val_V_empty_n,
        StrmMPix_V_val_V_read,
        AXI_video_strm_TDATA,
        AXI_video_strm_TVALID,
        AXI_video_strm_TREADY,
        AXI_video_strm_TKEEP,
        AXI_video_strm_TSTRB,
        AXI_video_strm_TUSER,
        AXI_video_strm_TLAST,
        AXI_video_strm_TID,
        AXI_video_strm_TDEST,
        Height_dout,
        Height_empty_n,
        Height_read,
        WidthOut_dout,
        WidthOut_empty_n,
        WidthOut_read,
        ColorMode_dout,
        ColorMode_empty_n,
        ColorMode_read
);

parameter    ap_ST_st1_fsm_0 = 5'b1;
parameter    ap_ST_st2_fsm_1 = 5'b10;
parameter    ap_ST_st3_fsm_2 = 5'b100;
parameter    ap_ST_st4_fsm_3 = 5'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 5'b10000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_FFF = 12'b111111111111;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv6_F = 6'b1111;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv6_17 = 6'b10111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] StrmMPix_V_val_V_dout;
input   StrmMPix_V_val_V_empty_n;
output   StrmMPix_V_val_V_read;
output  [23:0] AXI_video_strm_TDATA;
output   AXI_video_strm_TVALID;
input   AXI_video_strm_TREADY;
output  [2:0] AXI_video_strm_TKEEP;
output  [2:0] AXI_video_strm_TSTRB;
output  [0:0] AXI_video_strm_TUSER;
output  [0:0] AXI_video_strm_TLAST;
output  [0:0] AXI_video_strm_TID;
output  [0:0] AXI_video_strm_TDEST;
input  [15:0] Height_dout;
input   Height_empty_n;
output   Height_read;
input  [15:0] WidthOut_dout;
input   WidthOut_empty_n;
output   WidthOut_read;
input  [7:0] ColorMode_dout;
input   ColorMode_empty_n;
output   ColorMode_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg StrmMPix_V_val_V_read;
reg Height_read;
reg WidthOut_read;
reg ColorMode_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_23;
reg   [23:0] AXI_video_strm_V_data_V_1_data_out;
reg    AXI_video_strm_V_data_V_1_vld_in;
wire    AXI_video_strm_V_data_V_1_vld_out;
wire    AXI_video_strm_V_data_V_1_ack_in;
wire    AXI_video_strm_V_data_V_1_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_A;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_B;
reg    AXI_video_strm_V_data_V_1_sel_rd;
reg    AXI_video_strm_V_data_V_1_sel_wr;
wire    AXI_video_strm_V_data_V_1_sel;
wire    AXI_video_strm_V_data_V_1_load_A;
wire    AXI_video_strm_V_data_V_1_load_B;
reg   [1:0] AXI_video_strm_V_data_V_1_state;
wire    AXI_video_strm_V_data_V_1_state_cmp_full;
wire   [2:0] AXI_video_strm_V_keep_V_1_data_out;
reg    AXI_video_strm_V_keep_V_1_vld_in;
wire    AXI_video_strm_V_keep_V_1_vld_out;
wire    AXI_video_strm_V_keep_V_1_ack_in;
wire    AXI_video_strm_V_keep_V_1_ack_out;
reg    AXI_video_strm_V_keep_V_1_sel_rd;
wire    AXI_video_strm_V_keep_V_1_sel;
reg   [1:0] AXI_video_strm_V_keep_V_1_state;
wire   [2:0] AXI_video_strm_V_strb_V_1_data_out;
reg    AXI_video_strm_V_strb_V_1_vld_in;
wire    AXI_video_strm_V_strb_V_1_vld_out;
wire    AXI_video_strm_V_strb_V_1_ack_in;
wire    AXI_video_strm_V_strb_V_1_ack_out;
reg    AXI_video_strm_V_strb_V_1_sel_rd;
wire    AXI_video_strm_V_strb_V_1_sel;
reg   [1:0] AXI_video_strm_V_strb_V_1_state;
reg   [0:0] AXI_video_strm_V_user_V_1_data_out;
reg    AXI_video_strm_V_user_V_1_vld_in;
wire    AXI_video_strm_V_user_V_1_vld_out;
wire    AXI_video_strm_V_user_V_1_ack_in;
wire    AXI_video_strm_V_user_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_B;
reg    AXI_video_strm_V_user_V_1_sel_rd;
reg    AXI_video_strm_V_user_V_1_sel_wr;
wire    AXI_video_strm_V_user_V_1_sel;
wire    AXI_video_strm_V_user_V_1_load_A;
wire    AXI_video_strm_V_user_V_1_load_B;
reg   [1:0] AXI_video_strm_V_user_V_1_state;
wire    AXI_video_strm_V_user_V_1_state_cmp_full;
reg   [0:0] AXI_video_strm_V_last_V_1_data_out;
reg    AXI_video_strm_V_last_V_1_vld_in;
wire    AXI_video_strm_V_last_V_1_vld_out;
wire    AXI_video_strm_V_last_V_1_ack_in;
wire    AXI_video_strm_V_last_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_B;
reg    AXI_video_strm_V_last_V_1_sel_rd;
reg    AXI_video_strm_V_last_V_1_sel_wr;
wire    AXI_video_strm_V_last_V_1_sel;
wire    AXI_video_strm_V_last_V_1_load_A;
wire    AXI_video_strm_V_last_V_1_load_B;
reg   [1:0] AXI_video_strm_V_last_V_1_state;
wire    AXI_video_strm_V_last_V_1_state_cmp_full;
wire   [0:0] AXI_video_strm_V_id_V_1_data_out;
reg    AXI_video_strm_V_id_V_1_vld_in;
wire    AXI_video_strm_V_id_V_1_vld_out;
wire    AXI_video_strm_V_id_V_1_ack_in;
wire    AXI_video_strm_V_id_V_1_ack_out;
reg    AXI_video_strm_V_id_V_1_sel_rd;
wire    AXI_video_strm_V_id_V_1_sel;
reg   [1:0] AXI_video_strm_V_id_V_1_state;
wire   [0:0] AXI_video_strm_V_dest_V_1_data_out;
reg    AXI_video_strm_V_dest_V_1_vld_in;
wire    AXI_video_strm_V_dest_V_1_vld_out;
wire    AXI_video_strm_V_dest_V_1_ack_in;
wire    AXI_video_strm_V_dest_V_1_ack_out;
reg    AXI_video_strm_V_dest_V_1_sel_rd;
wire    AXI_video_strm_V_dest_V_1_sel;
reg   [1:0] AXI_video_strm_V_dest_V_1_state;
wire   [3:0] mapComp_address0;
reg    mapComp_ce0;
wire   [1:0] mapComp_q0;
reg    StrmMPix_V_val_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_466;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] exitcond9_i_reg_587;
reg    AXI_video_strm_TDATA_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1;
reg    Height_blk_n;
reg    WidthOut_blk_n;
reg    ColorMode_blk_n;
reg   [11:0] j_i_reg_238;
reg   [15:0] Height_read_reg_498;
reg    ap_sig_502;
wire   [11:0] tmp_34_fu_249_p1;
reg   [11:0] tmp_34_reg_503;
wire   [12:0] tmp_35_fu_253_p1;
reg   [12:0] tmp_35_reg_508;
wire   [4:0] tmp_8_fu_273_p2;
reg   [4:0] tmp_8_reg_513;
wire   [1:0] i_fu_285_p2;
reg   [1:0] i_reg_521;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_518;
wire   [0:0] exitcond7_i_fu_279_p2;
wire   [12:0] tmp_38_fu_305_p1;
reg   [12:0] tmp_38_reg_538;
wire   [11:0] tmp_27_i_fu_308_p2;
reg   [11:0] tmp_27_i_reg_543;
wire   [1:0] tmp_39_fu_313_p1;
reg   [1:0] tmp_39_reg_548;
wire   [1:0] tmp_40_fu_317_p1;
reg   [1:0] tmp_40_reg_553;
wire   [1:0] tmp_41_fu_321_p1;
reg   [1:0] tmp_41_reg_558;
wire   [3:0] map_2_V_1_fu_354_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_544;
wire   [3:0] map_2_V_3_fu_370_p3;
wire   [3:0] map_2_V_5_fu_378_p3;
wire   [0:0] exitcond8_i_fu_390_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_557;
reg    ap_sig_572;
wire   [11:0] i_1_fu_395_p2;
reg   [11:0] i_1_reg_582;
wire   [0:0] exitcond9_i_fu_405_p2;
reg    ap_sig_582;
wire   [11:0] j_fu_410_p2;
wire   [0:0] axi_last_V_fu_416_p2;
reg   [0:0] axi_last_V_reg_596;
wire   [23:0] tmp_data_V_fu_482_p4;
reg   [3:0] map_V_2_i_reg_179;
reg   [3:0] map_V_1_i_reg_191;
reg   [3:0] map_2_V_4_reg_203;
reg   [1:0] i_i_reg_215;
reg   [11:0] i1_i_reg_227;
wire  signed [63:0] tmp_9_cast_fu_300_p1;
reg   [0:0] tmp_user_V_fu_110;
wire   [2:0] tmp_37_fu_261_p1;
wire   [4:0] p_shl_cast_fu_265_p3;
wire   [4:0] tmp_36_fu_257_p1;
wire   [4:0] tmp_28_i_cast_fu_291_p1;
wire   [4:0] tmp_9_fu_295_p2;
wire   [0:0] sel_tmp_fu_334_p2;
wire   [3:0] map_0_V_cast_fu_330_p1;
wire   [0:0] sel_tmp2_fu_348_p2;
wire   [3:0] map_2_V_fu_340_p3;
wire   [3:0] map_2_V_2_fu_362_p3;
wire   [12:0] i1_cast_i_fu_386_p1;
wire   [12:0] j_cast_i_fu_401_p1;
wire   [7:0] pix_val_0_V_fu_425_p1;
wire   [7:0] tmp_fu_449_p2;
wire   [7:0] tmp_fu_449_p3;
wire   [7:0] tmp_s_fu_460_p2;
wire   [7:0] tmp_s_fu_460_p3;
wire   [7:0] tmp_12_fu_471_p2;
wire   [7:0] tmp_12_fu_471_p3;
wire   [7:0] tmp_12_fu_471_p5;
wire   [7:0] tmp_s_fu_460_p5;
wire   [7:0] tmp_fu_449_p5;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'b1;
#0 AXI_video_strm_V_data_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_data_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_data_V_1_state = 2'b00;
#0 AXI_video_strm_V_keep_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_keep_V_1_state = 2'b00;
#0 AXI_video_strm_V_strb_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_strb_V_1_state = 2'b00;
#0 AXI_video_strm_V_user_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_user_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_user_V_1_state = 2'b00;
#0 AXI_video_strm_V_last_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_last_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_last_V_1_state = 2'b00;
#0 AXI_video_strm_V_id_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_id_V_1_state = 2'b00;
#0 AXI_video_strm_V_dest_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_dest_V_1_state = 2'b00;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo_mapComp #(
    .DataWidth( 2 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
mapComp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mapComp_address0),
    .ce0(mapComp_ce0),
    .q0(mapComp_q0)
);

bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U40(
    .din1(pix_val_0_V_fu_425_p1),
    .din2(tmp_fu_449_p2),
    .din3(tmp_fu_449_p3),
    .din4(tmp_39_reg_548),
    .dout(tmp_fu_449_p5)
);

bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U41(
    .din1(pix_val_0_V_fu_425_p1),
    .din2(tmp_s_fu_460_p2),
    .din3(tmp_s_fu_460_p3),
    .din4(tmp_40_reg_553),
    .dout(tmp_s_fu_460_p5)
);

bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U42(
    .din1(pix_val_0_V_fu_425_p1),
    .din2(tmp_12_fu_471_p2),
    .din3(tmp_12_fu_471_p3),
    .din4(tmp_41_reg_558),
    .dout(tmp_12_fu_471_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (1'b1 == AXI_video_strm_V_data_V_1_vld_out))) begin
            AXI_video_strm_V_data_V_1_sel_rd <= ~AXI_video_strm_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_in))) begin
            AXI_video_strm_V_data_V_1_sel_wr <= ~AXI_video_strm_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)) | ((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)) | ((AXI_video_strm_V_data_V_1_state == ap_const_lv2_3) & ~((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out))))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (1'b1 == AXI_video_strm_V_dest_V_1_vld_out))) begin
            AXI_video_strm_V_dest_V_1_sel_rd <= ~AXI_video_strm_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)) | ((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state) & ~((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out))))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (1'b1 == AXI_video_strm_V_id_V_1_vld_out))) begin
            AXI_video_strm_V_id_V_1_sel_rd <= ~AXI_video_strm_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)) | ((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state) & ~((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out))))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (1'b1 == AXI_video_strm_V_keep_V_1_vld_out))) begin
            AXI_video_strm_V_keep_V_1_sel_rd <= ~AXI_video_strm_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)) | ((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state) & ~((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out))))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (1'b1 == AXI_video_strm_V_last_V_1_vld_out))) begin
            AXI_video_strm_V_last_V_1_sel_rd <= ~AXI_video_strm_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_in))) begin
            AXI_video_strm_V_last_V_1_sel_wr <= ~AXI_video_strm_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)) | ((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state) & ~((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out))))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (1'b1 == AXI_video_strm_V_strb_V_1_vld_out))) begin
            AXI_video_strm_V_strb_V_1_sel_rd <= ~AXI_video_strm_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)) | ((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state) & ~((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out))))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (1'b1 == AXI_video_strm_V_user_V_1_vld_out))) begin
            AXI_video_strm_V_user_V_1_sel_rd <= ~AXI_video_strm_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_in))) begin
            AXI_video_strm_V_user_V_1_sel_wr <= ~AXI_video_strm_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)) | ((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state) & ~((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out))))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond9_i_fu_405_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond9_i_fu_405_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond9_i_fu_405_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond9_i_fu_405_p2))) begin
        i1_i_reg_227 <= i_1_reg_582;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond7_i_fu_279_p2))) begin
        i1_i_reg_227 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_i_reg_215 <= i_reg_521;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_502)) begin
        i_i_reg_215 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
        j_i_reg_238 <= ap_const_lv12_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond9_i_fu_405_p2))) begin
        j_i_reg_238 <= j_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        tmp_user_V_fu_110 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond7_i_fu_279_p2))) begin
        tmp_user_V_fu_110 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_A)) begin
        AXI_video_strm_V_data_V_1_payload_A <= tmp_data_V_fu_482_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_B)) begin
        AXI_video_strm_V_data_V_1_payload_B <= tmp_data_V_fu_482_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_A)) begin
        AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_B)) begin
        AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_A)) begin
        AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_110;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_B)) begin
        AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_110;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_502)) begin
        Height_read_reg_498 <= Height_dout;
        tmp_34_reg_503 <= tmp_34_fu_249_p1;
        tmp_35_reg_508 <= tmp_35_fu_253_p1;
        tmp_8_reg_513 <= tmp_8_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1 <= exitcond9_i_reg_587;
        exitcond9_i_reg_587 <= exitcond9_i_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond9_i_fu_405_p2))) begin
        axi_last_V_reg_596 <= axi_last_V_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_572)) begin
        i_1_reg_582 <= i_1_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_reg_521 <= i_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        map_2_V_4_reg_203 <= map_2_V_5_fu_378_p3;
        map_V_1_i_reg_191 <= map_2_V_3_fu_370_p3;
        map_V_2_i_reg_179 <= map_2_V_1_fu_354_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond7_i_fu_279_p2))) begin
        tmp_27_i_reg_543 <= tmp_27_i_fu_308_p2;
        tmp_38_reg_538 <= tmp_38_fu_305_p1;
        tmp_39_reg_548 <= tmp_39_fu_313_p1;
        tmp_40_reg_553 <= tmp_40_fu_317_p1;
        tmp_41_reg_558 <= tmp_41_fu_321_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1)))) begin
        AXI_video_strm_TDATA_blk_n = AXI_video_strm_V_data_V_1_state[1'b1];
    end else begin
        AXI_video_strm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_sel)) begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_B;
    end else begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_sel)) begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_B;
    end else begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_sel)) begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_B;
    end else begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        ColorMode_blk_n = ColorMode_empty_n;
    end else begin
        ColorMode_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_502)) begin
        ColorMode_read = 1'b1;
    end else begin
        ColorMode_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        Height_blk_n = Height_empty_n;
    end else begin
        Height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_502)) begin
        Height_read = 1'b1;
    end else begin
        Height_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587))) begin
        StrmMPix_V_val_V_blk_n = StrmMPix_V_val_V_empty_n;
    end else begin
        StrmMPix_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond9_i_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        StrmMPix_V_val_V_read = 1'b1;
    end else begin
        StrmMPix_V_val_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        WidthOut_blk_n = WidthOut_empty_n;
    end else begin
        WidthOut_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_502)) begin
        WidthOut_read = 1'b1;
    end else begin
        WidthOut_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_466) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_544) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_557) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mapComp_ce0 = 1'b1;
    end else begin
        mapComp_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_502) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond7_i_fu_279_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : begin
            if ((~(1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((1'b0 == exitcond8_i_fu_390_p2) & ~ap_sig_572)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond9_i_fu_405_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_582 | ((1'b0 == exitcond9_i_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond9_i_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond9_i_fu_405_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_TDATA = AXI_video_strm_V_data_V_1_data_out;

assign AXI_video_strm_TDEST = AXI_video_strm_V_dest_V_1_data_out;

assign AXI_video_strm_TID = AXI_video_strm_V_id_V_1_data_out;

assign AXI_video_strm_TKEEP = AXI_video_strm_V_keep_V_1_data_out;

assign AXI_video_strm_TLAST = AXI_video_strm_V_last_V_1_data_out;

assign AXI_video_strm_TSTRB = AXI_video_strm_V_strb_V_1_data_out;

assign AXI_video_strm_TUSER = AXI_video_strm_V_user_V_1_data_out;

assign AXI_video_strm_TVALID = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_data_V_1_ack_in = AXI_video_strm_V_data_V_1_state[1'b1];

assign AXI_video_strm_V_data_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_data_V_1_load_A = (AXI_video_strm_V_data_V_1_state_cmp_full & ~AXI_video_strm_V_data_V_1_sel_wr);

assign AXI_video_strm_V_data_V_1_load_B = (AXI_video_strm_V_data_V_1_sel_wr & AXI_video_strm_V_data_V_1_state_cmp_full);

assign AXI_video_strm_V_data_V_1_sel = AXI_video_strm_V_data_V_1_sel_rd;

assign AXI_video_strm_V_data_V_1_state_cmp_full = ((AXI_video_strm_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_data_V_1_vld_out = AXI_video_strm_V_data_V_1_state[1'b0];

assign AXI_video_strm_V_dest_V_1_ack_in = AXI_video_strm_V_dest_V_1_state[1'b1];

assign AXI_video_strm_V_dest_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_dest_V_1_data_out = 1'b0;

assign AXI_video_strm_V_dest_V_1_sel = AXI_video_strm_V_dest_V_1_sel_rd;

assign AXI_video_strm_V_dest_V_1_vld_out = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_id_V_1_ack_in = AXI_video_strm_V_id_V_1_state[1'b1];

assign AXI_video_strm_V_id_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_id_V_1_data_out = 1'b0;

assign AXI_video_strm_V_id_V_1_sel = AXI_video_strm_V_id_V_1_sel_rd;

assign AXI_video_strm_V_id_V_1_vld_out = AXI_video_strm_V_id_V_1_state[1'b0];

assign AXI_video_strm_V_keep_V_1_ack_in = AXI_video_strm_V_keep_V_1_state[1'b1];

assign AXI_video_strm_V_keep_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_keep_V_1_data_out = ap_const_lv3_7;

assign AXI_video_strm_V_keep_V_1_sel = AXI_video_strm_V_keep_V_1_sel_rd;

assign AXI_video_strm_V_keep_V_1_vld_out = AXI_video_strm_V_keep_V_1_state[1'b0];

assign AXI_video_strm_V_last_V_1_ack_in = AXI_video_strm_V_last_V_1_state[1'b1];

assign AXI_video_strm_V_last_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_last_V_1_load_A = (AXI_video_strm_V_last_V_1_state_cmp_full & ~AXI_video_strm_V_last_V_1_sel_wr);

assign AXI_video_strm_V_last_V_1_load_B = (AXI_video_strm_V_last_V_1_sel_wr & AXI_video_strm_V_last_V_1_state_cmp_full);

assign AXI_video_strm_V_last_V_1_sel = AXI_video_strm_V_last_V_1_sel_rd;

assign AXI_video_strm_V_last_V_1_state_cmp_full = ((AXI_video_strm_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_last_V_1_vld_out = AXI_video_strm_V_last_V_1_state[1'b0];

assign AXI_video_strm_V_strb_V_1_ack_in = AXI_video_strm_V_strb_V_1_state[1'b1];

assign AXI_video_strm_V_strb_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_strb_V_1_data_out = ap_const_lv3_0;

assign AXI_video_strm_V_strb_V_1_sel = AXI_video_strm_V_strb_V_1_sel_rd;

assign AXI_video_strm_V_strb_V_1_vld_out = AXI_video_strm_V_strb_V_1_state[1'b0];

assign AXI_video_strm_V_user_V_1_ack_in = AXI_video_strm_V_user_V_1_state[1'b1];

assign AXI_video_strm_V_user_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_user_V_1_load_A = (AXI_video_strm_V_user_V_1_state_cmp_full & ~AXI_video_strm_V_user_V_1_sel_wr);

assign AXI_video_strm_V_user_V_1_load_B = (AXI_video_strm_V_user_V_1_sel_wr & AXI_video_strm_V_user_V_1_state_cmp_full);

assign AXI_video_strm_V_user_V_1_sel = AXI_video_strm_V_user_V_1_sel_rd;

assign AXI_video_strm_V_user_V_1_state_cmp_full = ((AXI_video_strm_V_user_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_user_V_1_vld_out = AXI_video_strm_V_user_V_1_state[1'b0];

always @ (*) begin
    ap_sig_23 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_466 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_502 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (Height_empty_n == 1'b0) | (WidthOut_empty_n == 1'b0) | (ColorMode_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_544 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_557 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_572 = ((AXI_video_strm_V_data_V_1_ack_in == 1'b0) | (AXI_video_strm_V_keep_V_1_ack_in == 1'b0) | (AXI_video_strm_V_strb_V_1_ack_in == 1'b0) | (AXI_video_strm_V_user_V_1_ack_in == 1'b0) | (AXI_video_strm_V_last_V_1_ack_in == 1'b0) | (AXI_video_strm_V_id_V_1_ack_in == 1'b0) | (AXI_video_strm_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_sig_582 = ((1'b0 == exitcond9_i_reg_587) & (StrmMPix_V_val_V_empty_n == 1'b0));
end

assign axi_last_V_fu_416_p2 = ((j_i_reg_238 == tmp_27_i_reg_543) ? 1'b1 : 1'b0);

assign exitcond7_i_fu_279_p2 = ((i_i_reg_215 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond8_i_fu_390_p2 = ((i1_cast_i_fu_386_p1 == tmp_38_reg_538) ? 1'b1 : 1'b0);

assign exitcond9_i_fu_405_p2 = ((j_cast_i_fu_401_p1 == tmp_35_reg_508) ? 1'b1 : 1'b0);

assign i1_cast_i_fu_386_p1 = i1_i_reg_227;

assign i_1_fu_395_p2 = (i1_i_reg_227 + ap_const_lv12_1);

assign i_fu_285_p2 = (i_i_reg_215 + ap_const_lv2_1);

assign j_cast_i_fu_401_p1 = j_i_reg_238;

assign j_fu_410_p2 = (j_i_reg_238 + ap_const_lv12_1);

assign mapComp_address0 = tmp_9_cast_fu_300_p1;

assign map_0_V_cast_fu_330_p1 = mapComp_q0;

assign map_2_V_1_fu_354_p3 = ((sel_tmp2_fu_348_p2[0:0] === 1'b1) ? map_V_2_i_reg_179 : map_2_V_fu_340_p3);

assign map_2_V_2_fu_362_p3 = ((sel_tmp_fu_334_p2[0:0] === 1'b1) ? map_0_V_cast_fu_330_p1 : map_V_1_i_reg_191);

assign map_2_V_3_fu_370_p3 = ((sel_tmp2_fu_348_p2[0:0] === 1'b1) ? map_V_1_i_reg_191 : map_2_V_2_fu_362_p3);

assign map_2_V_5_fu_378_p3 = ((sel_tmp2_fu_348_p2[0:0] === 1'b1) ? map_0_V_cast_fu_330_p1 : map_2_V_4_reg_203);

assign map_2_V_fu_340_p3 = ((sel_tmp_fu_334_p2[0:0] === 1'b1) ? map_V_2_i_reg_179 : map_0_V_cast_fu_330_p1);

assign p_shl_cast_fu_265_p3 = {{tmp_37_fu_261_p1}, {ap_const_lv2_0}};

assign pix_val_0_V_fu_425_p1 = StrmMPix_V_val_V_dout[7:0];

assign sel_tmp2_fu_348_p2 = ((i_i_reg_215 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_334_p2 = ((i_i_reg_215 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_12_fu_471_p2 = {{StrmMPix_V_val_V_dout[ap_const_lv6_F : ap_const_lv6_8]}};

assign tmp_12_fu_471_p3 = {{StrmMPix_V_val_V_dout[ap_const_lv6_17 : ap_const_lv6_10]}};

assign tmp_27_i_fu_308_p2 = ($signed(ap_const_lv12_FFF) + $signed(tmp_34_reg_503));

assign tmp_28_i_cast_fu_291_p1 = i_i_reg_215;

assign tmp_34_fu_249_p1 = WidthOut_dout[11:0];

assign tmp_35_fu_253_p1 = WidthOut_dout[12:0];

assign tmp_36_fu_257_p1 = ColorMode_dout[4:0];

assign tmp_37_fu_261_p1 = ColorMode_dout[2:0];

assign tmp_38_fu_305_p1 = Height_read_reg_498[12:0];

assign tmp_39_fu_313_p1 = map_2_V_4_reg_203[1:0];

assign tmp_40_fu_317_p1 = map_V_1_i_reg_191[1:0];

assign tmp_41_fu_321_p1 = map_V_2_i_reg_179[1:0];

assign tmp_8_fu_273_p2 = (p_shl_cast_fu_265_p3 - tmp_36_fu_257_p1);

assign tmp_9_cast_fu_300_p1 = $signed(tmp_9_fu_295_p2);

assign tmp_9_fu_295_p2 = (tmp_8_reg_513 + tmp_28_i_cast_fu_291_p1);

assign tmp_data_V_fu_482_p4 = {{{tmp_12_fu_471_p5}, {tmp_s_fu_460_p5}}, {tmp_fu_449_p5}};

assign tmp_fu_449_p2 = {{StrmMPix_V_val_V_dout[ap_const_lv6_F : ap_const_lv6_8]}};

assign tmp_fu_449_p3 = {{StrmMPix_V_val_V_dout[ap_const_lv6_17 : ap_const_lv6_10]}};

assign tmp_s_fu_460_p2 = {{StrmMPix_V_val_V_dout[ap_const_lv6_F : ap_const_lv6_8]}};

assign tmp_s_fu_460_p3 = {{StrmMPix_V_val_V_dout[ap_const_lv6_17 : ap_const_lv6_10]}};

endmodule //bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo
