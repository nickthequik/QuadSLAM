-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_776d_hsc_0_v_hscaler_AXIvideo2MultiPixStream69 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_V_val_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    img_V_val_V_full_n : IN STD_LOGIC;
    img_V_val_V_write : OUT STD_LOGIC;
    Height : IN STD_LOGIC_VECTOR (15 downto 0);
    WidthIn : IN STD_LOGIC_VECTOR (15 downto 0);
    colorMode : IN STD_LOGIC_VECTOR (7 downto 0);
    HwReg_WidthOut : IN STD_LOGIC_VECTOR (15 downto 0);
    Height_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    Height_out_full_n : IN STD_LOGIC;
    Height_out_write : OUT STD_LOGIC;
    WidthIn_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    WidthIn_out_full_n : IN STD_LOGIC;
    WidthIn_out_write : OUT STD_LOGIC;
    colorMode_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    colorMode_out_full_n : IN STD_LOGIC;
    colorMode_out_write : OUT STD_LOGIC;
    HwReg_WidthOut_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    HwReg_WidthOut_out_full_n : IN STD_LOGIC;
    HwReg_WidthOut_out_write : OUT STD_LOGIC );
end;


architecture behav of bd_776d_hsc_0_v_hscaler_AXIvideo2MultiPixStream69 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_pp1_stg0_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_pp2_stg0_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st9_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_25 : BOOLEAN;
    signal AXI_video_strm_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal s_axis_video_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_469 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_476 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal exitcond9_i_i_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_495 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal eol_2_i_i_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_V_val_V_blk_n : STD_LOGIC;
    signal Height_out_blk_n : STD_LOGIC;
    signal WidthIn_out_blk_n : STD_LOGIC;
    signal colorMode_out_blk_n : STD_LOGIC;
    signal HwReg_WidthOut_out_blk_n : STD_LOGIC;
    signal eol_i_i_reg_224 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_i_i_reg_236 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_reg_247 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_i_reg_258 : STD_LOGIC_VECTOR (23 downto 0);
    signal axi_last_V_3_i_i_reg_305 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_3_i_i_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_545 : BOOLEAN;
    signal tmp_fu_339_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_reg_470 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_V_reg_475 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_reg_483 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_347_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_reg_495 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_566 : BOOLEAN;
    signal sel_tmp2_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_i_i_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_577 : BOOLEAN;
    signal i_fu_369_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_511 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond9_i_i_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_586 : BOOLEAN;
    signal j_fu_384_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal brmerge_i_i_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_599 : BOOLEAN;
    signal eol_2_i_i_phi_fu_297_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_i_i_reg_193 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_6 : STD_LOGIC;
    signal ap_sig_624 : BOOLEAN;
    signal axi_data_V1_i_i_reg_203 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_i_i_reg_213 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_i_i_phi_fu_228_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_i_phi_fu_274_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_phi_fu_286_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_phiprechg_axi_last_V_2_i_i_reg_269pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Val2_s_reg_282pp1_it1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sof_1_i_i_fu_108 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_cast_i_i_fu_360_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_cast_i_i_fu_375_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal pix_val_2_V_fu_418_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_0_V_3_fu_404_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_1_V_2_fu_414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_2_V_1_fu_428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_1_V_1_fu_435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_0_V_fu_442_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_fu_343_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_508 : BOOLEAN;


begin




    AXI_video_strm_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out))) then 
                                        AXI_video_strm_V_data_V_0_sel_rd <= not(AXI_video_strm_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_in))) then 
                                        AXI_video_strm_V_data_V_0_sel_wr <= not(AXI_video_strm_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_2)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1)) or ((AXI_video_strm_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out)))))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out)))))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_out))) then 
                                        AXI_video_strm_V_last_V_0_sel_rd <= not(AXI_video_strm_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_in))) then 
                                        AXI_video_strm_V_last_V_0_sel_wr <= not(AXI_video_strm_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out)))))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_out))) then 
                                        AXI_video_strm_V_user_V_0_sel_rd <= not(AXI_video_strm_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_in))) then 
                                        AXI_video_strm_V_user_V_0_sel_wr <= not(AXI_video_strm_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out)))))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond8_i_i_fu_364_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_fu_379_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)) and not((ap_const_lv1_0 = eol_2_i_i_phi_fu_297_p4)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_reg_516)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_reg_ppiten_pp2_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_reg_516)))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_i_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_6)) then 
                axi_data_V1_i_i_reg_203 <= axi_data_V_3_i_i_reg_317;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_data_V1_i_i_reg_203 <= tmp_data_V_reg_475;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_i_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then 
                axi_data_V_1_i_i_reg_258 <= p_Val2_s_phi_fu_286_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                axi_data_V_1_i_i_reg_258 <= axi_data_V1_i_i_reg_203;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_i_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_reg_516)))) then 
                axi_data_V_3_i_i_reg_317 <= axi_data_V_1_i_i_reg_258;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)))) then 
                axi_data_V_3_i_i_reg_317 <= AXI_video_strm_V_data_V_0_data_out;
            end if; 
        end if;
    end process;

    axi_last_V1_i_i_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_6)) then 
                axi_last_V1_i_i_reg_193 <= axi_last_V_3_i_i_reg_305;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_last_V1_i_i_reg_193 <= tmp_last_V_reg_483;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_i_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_reg_516)))) then 
                axi_last_V_3_i_i_reg_305 <= eol_reg_247;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)))) then 
                axi_last_V_3_i_i_reg_305 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_2_i_i_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_lv1_0 = exitcond9_i_i_reg_516)))) then 
                eol_2_i_i_reg_294 <= eol_i_i_reg_224;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)))) then 
                eol_2_i_i_reg_294 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_i_i_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then 
                eol_i_i_reg_224 <= axi_last_V_2_i_i_phi_fu_274_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                eol_i_i_reg_224 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then 
                eol_reg_247 <= axi_last_V_2_i_i_phi_fu_274_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                eol_reg_247 <= axi_last_V1_i_i_reg_193;
            end if; 
        end if;
    end process;

    i_i_i_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_6)) then 
                i_i_i_reg_213 <= i_reg_511;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                i_i_i_reg_213 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_i_i_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and (ap_const_lv1_0 = exitcond9_i_i_fu_379_p2))) then 
                j_i_i_reg_236 <= j_fu_384_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then 
                j_i_i_reg_236 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    sof_1_i_i_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and (ap_const_lv1_0 = exitcond9_i_i_fu_379_p2))) then 
                sof_1_i_i_fu_108 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                sof_1_i_i_fu_108 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_A)) then
                AXI_video_strm_V_data_V_0_payload_A <= s_axis_video_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_B)) then
                AXI_video_strm_V_data_V_0_payload_B <= s_axis_video_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_A)) then
                AXI_video_strm_V_last_V_0_payload_A <= s_axis_video_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_B)) then
                AXI_video_strm_V_last_V_0_payload_B <= s_axis_video_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_A)) then
                AXI_video_strm_V_user_V_0_payload_A <= s_axis_video_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_B)) then
                AXI_video_strm_V_user_V_0_payload_B <= s_axis_video_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and (ap_const_lv1_0 = exitcond9_i_i_fu_379_p2))) then
                brmerge_i_i_reg_525 <= brmerge_i_i_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then
                exitcond9_i_i_reg_516 <= exitcond9_i_i_fu_379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_reg_511 <= i_fu_369_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                sel_tmp2_reg_500 <= sel_tmp2_fu_350_p2;
                tmp_31_reg_495 <= tmp_31_fu_347_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)))) then
                tmp_data_V_reg_475 <= AXI_video_strm_V_data_V_0_data_out;
                tmp_last_V_reg_483 <= AXI_video_strm_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_545))) then
                tmp_reg_470 <= tmp_fu_339_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it0, ap_sig_545, exitcond8_i_i_fu_364_p2, ap_sig_586, ap_sig_599, tmp_user_V_fu_343_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_545)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_user_V_fu_343_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_user_V_fu_343_p1)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_pp1_stg0_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it0)))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_pp2_stg0_fsm_5 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it0))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_5;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it0)))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_5;
                end if;
            when ap_ST_st9_fsm_6 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    AXI_video_strm_V_data_V_0_ack_in <= AXI_video_strm_V_data_V_0_state(1);

    AXI_video_strm_V_data_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, brmerge_i_i_reg_525, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294, ap_sig_586, ap_sig_599)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586))))) then 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_data_V_0_data_out_assign_proc : process(AXI_video_strm_V_data_V_0_payload_A, AXI_video_strm_V_data_V_0_payload_B, AXI_video_strm_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_sel)) then 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_B;
        else 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_0_load_A <= (AXI_video_strm_V_data_V_0_state_cmp_full and not(AXI_video_strm_V_data_V_0_sel_wr));
    AXI_video_strm_V_data_V_0_load_B <= (AXI_video_strm_V_data_V_0_sel_wr and AXI_video_strm_V_data_V_0_state_cmp_full);
    AXI_video_strm_V_data_V_0_sel <= AXI_video_strm_V_data_V_0_sel_rd;
    AXI_video_strm_V_data_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_data_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_data_V_0_vld_out <= AXI_video_strm_V_data_V_0_state(0);

    AXI_video_strm_V_dest_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, brmerge_i_i_reg_525, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294, ap_sig_586, ap_sig_599)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586))))) then 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_last_V_0_ack_in <= AXI_video_strm_V_last_V_0_state(1);

    AXI_video_strm_V_last_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, brmerge_i_i_reg_525, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294, ap_sig_586, ap_sig_599)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586))))) then 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_last_V_0_data_out_assign_proc : process(AXI_video_strm_V_last_V_0_payload_A, AXI_video_strm_V_last_V_0_payload_B, AXI_video_strm_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_sel)) then 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_B;
        else 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_0_load_A <= (AXI_video_strm_V_last_V_0_state_cmp_full and not(AXI_video_strm_V_last_V_0_sel_wr));
    AXI_video_strm_V_last_V_0_load_B <= (AXI_video_strm_V_last_V_0_sel_wr and AXI_video_strm_V_last_V_0_state_cmp_full);
    AXI_video_strm_V_last_V_0_sel <= AXI_video_strm_V_last_V_0_sel_rd;
    AXI_video_strm_V_last_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_last_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_last_V_0_vld_out <= AXI_video_strm_V_last_V_0_state(0);
    AXI_video_strm_V_user_V_0_ack_in <= AXI_video_strm_V_user_V_0_state(1);

    AXI_video_strm_V_user_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, brmerge_i_i_reg_525, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294, ap_sig_586, ap_sig_599)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_599))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586))))) then 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_user_V_0_data_out_assign_proc : process(AXI_video_strm_V_user_V_0_payload_A, AXI_video_strm_V_user_V_0_payload_B, AXI_video_strm_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_sel)) then 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_B;
        else 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_0_load_A <= (AXI_video_strm_V_user_V_0_state_cmp_full and not(AXI_video_strm_V_user_V_0_sel_wr));
    AXI_video_strm_V_user_V_0_load_B <= (AXI_video_strm_V_user_V_0_sel_wr and AXI_video_strm_V_user_V_0_state_cmp_full);
    AXI_video_strm_V_user_V_0_sel <= AXI_video_strm_V_user_V_0_sel_rd;
    AXI_video_strm_V_user_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_user_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_user_V_0_vld_out <= AXI_video_strm_V_user_V_0_state(0);

    Height_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, Height_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            Height_out_blk_n <= Height_out_full_n;
        else 
            Height_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Height_out_din <= Height;

    Height_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_545)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_545))) then 
            Height_out_write <= ap_const_logic_1;
        else 
            Height_out_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_WidthOut_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, HwReg_WidthOut_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            HwReg_WidthOut_out_blk_n <= HwReg_WidthOut_out_full_n;
        else 
            HwReg_WidthOut_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_WidthOut_out_din <= HwReg_WidthOut;

    HwReg_WidthOut_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_545)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_545))) then 
            HwReg_WidthOut_out_write <= ap_const_logic_1;
        else 
            HwReg_WidthOut_out_write <= ap_const_logic_0;
        end if; 
    end process;


    WidthIn_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, WidthIn_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            WidthIn_out_blk_n <= WidthIn_out_full_n;
        else 
            WidthIn_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    WidthIn_out_din <= WidthIn;

    WidthIn_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_545)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_545))) then 
            WidthIn_out_write <= ap_const_logic_1;
        else 
            WidthIn_out_write <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond8_i_i_fu_364_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond8_i_i_fu_364_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond8_i_i_fu_364_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond8_i_i_fu_364_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_axi_last_V_2_i_i_reg_269pp1_it1 <= "X";
    ap_reg_phiprechg_p_Val2_s_reg_282pp1_it1 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_sig_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_469_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_469 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_476_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_476 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_495_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_495 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_508_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516)
    begin
                ap_sig_508 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516));
    end process;


    ap_sig_545_assign_proc : process(ap_start, ap_done_reg, Height_out_full_n, WidthIn_out_full_n, colorMode_out_full_n, HwReg_WidthOut_out_full_n)
    begin
                ap_sig_545 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (Height_out_full_n = ap_const_logic_0) or (WidthIn_out_full_n = ap_const_logic_0) or (colorMode_out_full_n = ap_const_logic_0) or (HwReg_WidthOut_out_full_n = ap_const_logic_0));
    end process;


    ap_sig_566_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_566 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_577_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_577 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_586_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, img_V_val_V_full_n, exitcond9_i_i_reg_516, brmerge_i_i_reg_525)
    begin
                ap_sig_586 <= (((ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525) and (AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond9_i_i_reg_516) and (img_V_val_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_599_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, eol_2_i_i_reg_294)
    begin
                ap_sig_599 <= ((ap_const_lv1_0 = eol_2_i_i_reg_294) and (AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_sig_624_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_624 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_4_assign_proc : process(ap_sig_476)
    begin
        if (ap_sig_476) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp2_stg0_fsm_5_assign_proc : process(ap_sig_495)
    begin
        if (ap_sig_495) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_25)
    begin
        if (ap_sig_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_469)
    begin
        if (ap_sig_469) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_566)
    begin
        if (ap_sig_566) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_577)
    begin
        if (ap_sig_577) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_6_assign_proc : process(ap_sig_624)
    begin
        if (ap_sig_624) then 
            ap_sig_cseq_ST_st9_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    axi_last_V_2_i_i_phi_fu_274_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, brmerge_i_i_reg_525, eol_reg_247, ap_reg_phiprechg_axi_last_V_2_i_i_reg_269pp1_it1, ap_sig_508)
    begin
        if (ap_sig_508) then
            if (not((ap_const_lv1_0 = brmerge_i_i_reg_525))) then 
                axi_last_V_2_i_i_phi_fu_274_p4 <= eol_reg_247;
            elsif ((ap_const_lv1_0 = brmerge_i_i_reg_525)) then 
                axi_last_V_2_i_i_phi_fu_274_p4 <= AXI_video_strm_V_last_V_0_data_out;
            else 
                axi_last_V_2_i_i_phi_fu_274_p4 <= ap_reg_phiprechg_axi_last_V_2_i_i_reg_269pp1_it1;
            end if;
        else 
            axi_last_V_2_i_i_phi_fu_274_p4 <= ap_reg_phiprechg_axi_last_V_2_i_i_reg_269pp1_it1;
        end if; 
    end process;

    brmerge_i_i_fu_393_p2 <= (sof_1_i_i_fu_108 or eol_i_i_phi_fu_228_p4);

    colorMode_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, colorMode_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            colorMode_out_blk_n <= colorMode_out_full_n;
        else 
            colorMode_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    colorMode_out_din <= colorMode;

    colorMode_out_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_545)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_545))) then 
            colorMode_out_write <= ap_const_logic_1;
        else 
            colorMode_out_write <= ap_const_logic_0;
        end if; 
    end process;


    eol_2_i_i_phi_fu_297_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294))) then 
            eol_2_i_i_phi_fu_297_p4 <= AXI_video_strm_V_last_V_0_data_out;
        else 
            eol_2_i_i_phi_fu_297_p4 <= eol_2_i_i_reg_294;
        end if; 
    end process;


    eol_i_i_phi_fu_228_p4_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, eol_i_i_reg_224, axi_last_V_2_i_i_phi_fu_274_p4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516))) then 
            eol_i_i_phi_fu_228_p4 <= axi_last_V_2_i_i_phi_fu_274_p4;
        else 
            eol_i_i_phi_fu_228_p4 <= eol_i_i_reg_224;
        end if; 
    end process;

    exitcond8_i_i_fu_364_p2 <= "1" when (i_cast_i_i_fu_360_p1 = tmp_31_reg_495) else "0";
    exitcond9_i_i_fu_379_p2 <= "1" when (j_cast_i_i_fu_375_p1 = tmp_reg_470) else "0";
    i_cast_i_i_fu_360_p1 <= std_logic_vector(resize(unsigned(i_i_i_reg_213),12));
    i_fu_369_p2 <= std_logic_vector(unsigned(i_i_i_reg_213) + unsigned(ap_const_lv11_1));

    img_V_val_V_blk_n_assign_proc : process(img_V_val_V_full_n, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516))) then 
            img_V_val_V_blk_n <= img_V_val_V_full_n;
        else 
            img_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_V_val_V_din <= ((pix_val_2_V_1_fu_428_p3 & pix_val_1_V_1_fu_435_p3) & pix_val_0_V_fu_442_p3);

    img_V_val_V_write_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, ap_sig_586)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_586)))) then 
            img_V_val_V_write <= ap_const_logic_1;
        else 
            img_V_val_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_cast_i_i_fu_375_p1 <= std_logic_vector(resize(unsigned(j_i_i_reg_236),12));
    j_fu_384_p2 <= std_logic_vector(unsigned(j_i_i_reg_236) + unsigned(ap_const_lv11_1));

    p_Val2_s_phi_fu_286_p4_assign_proc : process(AXI_video_strm_V_data_V_0_data_out, brmerge_i_i_reg_525, axi_data_V_1_i_i_reg_258, ap_reg_phiprechg_p_Val2_s_reg_282pp1_it1, ap_sig_508)
    begin
        if (ap_sig_508) then
            if (not((ap_const_lv1_0 = brmerge_i_i_reg_525))) then 
                p_Val2_s_phi_fu_286_p4 <= axi_data_V_1_i_i_reg_258;
            elsif ((ap_const_lv1_0 = brmerge_i_i_reg_525)) then 
                p_Val2_s_phi_fu_286_p4 <= AXI_video_strm_V_data_V_0_data_out;
            else 
                p_Val2_s_phi_fu_286_p4 <= ap_reg_phiprechg_p_Val2_s_reg_282pp1_it1;
            end if;
        else 
            p_Val2_s_phi_fu_286_p4 <= ap_reg_phiprechg_p_Val2_s_reg_282pp1_it1;
        end if; 
    end process;

    pix_val_0_V_3_fu_404_p4 <= p_Val2_s_phi_fu_286_p4(23 downto 16);
    pix_val_0_V_fu_442_p3 <= 
        pix_val_0_V_3_fu_404_p4 when (sel_tmp2_reg_500(0) = '1') else 
        pix_val_1_V_2_fu_414_p1;
    pix_val_1_V_1_fu_435_p3 <= 
        pix_val_1_V_2_fu_414_p1 when (sel_tmp2_reg_500(0) = '1') else 
        pix_val_2_V_fu_418_p4;
    pix_val_1_V_2_fu_414_p1 <= p_Val2_s_phi_fu_286_p4(8 - 1 downto 0);
    pix_val_2_V_1_fu_428_p3 <= 
        pix_val_2_V_fu_418_p4 when (sel_tmp2_reg_500(0) = '1') else 
        pix_val_0_V_3_fu_404_p4;
    pix_val_2_V_fu_418_p4 <= p_Val2_s_phi_fu_286_p4(15 downto 8);

    s_axis_video_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_0_state, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1, exitcond9_i_i_reg_516, brmerge_i_i_reg_525, ap_sig_cseq_ST_pp2_stg0_fsm_5, ap_reg_ppiten_pp2_it1, eol_2_i_i_reg_294)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond9_i_i_reg_516) and (ap_const_lv1_0 = brmerge_i_i_reg_525)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_i_reg_294)))) then 
            s_axis_video_TDATA_blk_n <= AXI_video_strm_V_data_V_0_state(0);
        else 
            s_axis_video_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_video_TREADY <= AXI_video_strm_V_dest_V_0_state(1);
    sel_tmp2_fu_350_p2 <= "1" when (colorMode = ap_const_lv8_0) else "0";
    tmp_31_fu_347_p1 <= Height(12 - 1 downto 0);
    tmp_fu_339_p1 <= WidthIn(12 - 1 downto 0);
    tmp_user_V_fu_343_p1 <= AXI_video_strm_V_user_V_0_data_out;
end behav;
