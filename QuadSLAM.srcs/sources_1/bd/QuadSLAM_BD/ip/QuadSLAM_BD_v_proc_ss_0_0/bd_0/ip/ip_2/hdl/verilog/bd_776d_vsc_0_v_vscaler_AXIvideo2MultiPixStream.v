// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_776d_vsc_0_v_vscaler_AXIvideo2MultiPixStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        AXI_video_strm_TDATA,
        AXI_video_strm_TVALID,
        AXI_video_strm_TREADY,
        AXI_video_strm_TKEEP,
        AXI_video_strm_TSTRB,
        AXI_video_strm_TUSER,
        AXI_video_strm_TLAST,
        AXI_video_strm_TID,
        AXI_video_strm_TDEST,
        img_V_val_V_din,
        img_V_val_V_full_n,
        img_V_val_V_write,
        Height,
        WidthIn
);

parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_st5_fsm_4 = 8'b10000;
parameter    ap_ST_pp1_stg0_fsm_5 = 8'b100000;
parameter    ap_ST_pp2_stg0_fsm_6 = 8'b1000000;
parameter    ap_ST_st10_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_1 = 11'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] AXI_video_strm_TDATA;
input   AXI_video_strm_TVALID;
output   AXI_video_strm_TREADY;
input  [2:0] AXI_video_strm_TKEEP;
input  [2:0] AXI_video_strm_TSTRB;
input  [0:0] AXI_video_strm_TUSER;
input  [0:0] AXI_video_strm_TLAST;
input  [0:0] AXI_video_strm_TID;
input  [0:0] AXI_video_strm_TDEST;
output  [23:0] img_V_val_V_din;
input   img_V_val_V_full_n;
output   img_V_val_V_write;
input  [10:0] Height;
input  [10:0] WidthIn;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_V_val_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_26;
reg   [23:0] AXI_video_strm_V_data_V_0_data_out;
wire    AXI_video_strm_V_data_V_0_vld_in;
wire    AXI_video_strm_V_data_V_0_vld_out;
wire    AXI_video_strm_V_data_V_0_ack_in;
reg    AXI_video_strm_V_data_V_0_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_0_payload_A;
reg   [23:0] AXI_video_strm_V_data_V_0_payload_B;
reg    AXI_video_strm_V_data_V_0_sel_rd;
reg    AXI_video_strm_V_data_V_0_sel_wr;
wire    AXI_video_strm_V_data_V_0_sel;
wire    AXI_video_strm_V_data_V_0_load_A;
wire    AXI_video_strm_V_data_V_0_load_B;
reg   [1:0] AXI_video_strm_V_data_V_0_state;
wire    AXI_video_strm_V_data_V_0_state_cmp_full;
reg   [0:0] AXI_video_strm_V_user_V_0_data_out;
wire    AXI_video_strm_V_user_V_0_vld_in;
wire    AXI_video_strm_V_user_V_0_vld_out;
wire    AXI_video_strm_V_user_V_0_ack_in;
reg    AXI_video_strm_V_user_V_0_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_0_payload_A;
reg   [0:0] AXI_video_strm_V_user_V_0_payload_B;
reg    AXI_video_strm_V_user_V_0_sel_rd;
reg    AXI_video_strm_V_user_V_0_sel_wr;
wire    AXI_video_strm_V_user_V_0_sel;
wire    AXI_video_strm_V_user_V_0_load_A;
wire    AXI_video_strm_V_user_V_0_load_B;
reg   [1:0] AXI_video_strm_V_user_V_0_state;
wire    AXI_video_strm_V_user_V_0_state_cmp_full;
reg   [0:0] AXI_video_strm_V_last_V_0_data_out;
wire    AXI_video_strm_V_last_V_0_vld_in;
wire    AXI_video_strm_V_last_V_0_vld_out;
wire    AXI_video_strm_V_last_V_0_ack_in;
reg    AXI_video_strm_V_last_V_0_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_0_payload_A;
reg   [0:0] AXI_video_strm_V_last_V_0_payload_B;
reg    AXI_video_strm_V_last_V_0_sel_rd;
reg    AXI_video_strm_V_last_V_0_sel_wr;
wire    AXI_video_strm_V_last_V_0_sel;
wire    AXI_video_strm_V_last_V_0_load_A;
wire    AXI_video_strm_V_last_V_0_load_B;
reg   [1:0] AXI_video_strm_V_last_V_0_state;
wire    AXI_video_strm_V_last_V_0_state_cmp_full;
wire    AXI_video_strm_V_dest_V_0_vld_in;
reg    AXI_video_strm_V_dest_V_0_ack_out;
reg   [1:0] AXI_video_strm_V_dest_V_0_state;
reg    AXI_video_strm_TDATA_blk_n;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_452;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_5;
reg    ap_sig_459;
reg    ap_reg_ppiten_pp1_it1;
reg    ap_reg_ppiten_pp1_it0;
reg   [0:0] exitcond7_i_reg_372;
reg   [0:0] brmerge_i_reg_381;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_6;
reg    ap_sig_478;
reg    ap_reg_ppiten_pp2_it1;
reg    ap_reg_ppiten_pp2_it0;
reg   [0:0] eol_2_i_reg_221;
reg    img_V_val_V_blk_n;
reg   [0:0] eol_i_reg_150;
reg   [10:0] j_i_reg_162;
reg   [0:0] eol_reg_173;
reg   [23:0] axi_data_V_1_i_reg_184;
reg   [0:0] axi_last_V_3_i_reg_232;
reg   [23:0] axi_data_V_3_i_reg_244;
reg    ap_sig_513;
wire   [10:0] grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return;
reg   [10:0] tmp_i_reg_333;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_525;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done;
wire   [10:0] grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return;
reg   [10:0] tmp_i_53_reg_338;
reg   [23:0] tmp_data_V_reg_343;
reg   [0:0] tmp_last_V_reg_351;
wire   [0:0] exitcond6_i_fu_287_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_550;
wire   [10:0] i_fu_292_p2;
reg   [10:0] i_reg_367;
wire   [0:0] exitcond7_i_fu_298_p2;
reg    ap_sig_559;
wire   [10:0] j_fu_303_p2;
wire   [0:0] brmerge_i_fu_312_p2;
reg    ap_sig_572;
reg   [0:0] eol_2_i_phi_fu_224_p4;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_idle;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_idle;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready;
reg   [0:0] axi_last_V1_i_reg_119;
reg    ap_sig_cseq_ST_st10_fsm_7;
reg    ap_sig_608;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_615;
reg   [23:0] axi_data_V1_i_reg_129;
reg   [10:0] i_i_reg_139;
reg   [0:0] eol_i_phi_fu_154_p4;
reg   [0:0] axi_last_V_2_i_phi_fu_200_p4;
reg   [23:0] p_Val2_s_phi_fu_212_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1;
wire   [23:0] ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1;
reg    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start;
reg    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start;
reg   [0:0] sof_1_i_fu_78;
wire   [0:0] tmp_user_V_fu_278_p1;
reg   [7:0] ap_NS_fsm;
reg    ap_sig_491;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'b1;
#0 AXI_video_strm_V_data_V_0_sel_rd = 1'b0;
#0 AXI_video_strm_V_data_V_0_sel_wr = 1'b0;
#0 AXI_video_strm_V_data_V_0_state = 2'b00;
#0 AXI_video_strm_V_user_V_0_sel_rd = 1'b0;
#0 AXI_video_strm_V_user_V_0_sel_wr = 1'b0;
#0 AXI_video_strm_V_user_V_0_state = 2'b00;
#0 AXI_video_strm_V_last_V_0_sel_rd = 1'b0;
#0 AXI_video_strm_V_last_V_0_sel_wr = 1'b0;
#0 AXI_video_strm_V_last_V_0_state = 2'b00;
#0 AXI_video_strm_V_dest_V_0_state = 2'b00;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp2_it1 = 1'b0;
#0 ap_reg_ppiten_pp2_it0 = 1'b0;
#0 ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start = 1'b0;
#0 ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start = 1'b0;
end

bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s grp_v_vscaler_reg_unsigned_short_s_fu_256(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start),
    .ap_done(grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done),
    .ap_idle(grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_idle),
    .ap_ready(grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready),
    .in_r(Height),
    .ap_return(grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return)
);

bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s grp_v_vscaler_reg_unsigned_short_s_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start),
    .ap_done(grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done),
    .ap_idle(grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_idle),
    .ap_ready(grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready),
    .in_r(WidthIn),
    .ap_return(grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_0_ack_out) & (1'b1 == AXI_video_strm_V_data_V_0_vld_out))) begin
            AXI_video_strm_V_data_V_0_sel_rd <= ~AXI_video_strm_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (1'b1 == AXI_video_strm_V_data_V_0_ack_in))) begin
            AXI_video_strm_V_data_V_0_sel_wr <= ~AXI_video_strm_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_data_V_0_vld_in) & (1'b1 == AXI_video_strm_V_data_V_0_ack_out) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_0_vld_in) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_2)))) begin
            AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (1'b0 == AXI_video_strm_V_data_V_0_ack_out) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_0_ack_out) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_1)))) begin
            AXI_video_strm_V_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == AXI_video_strm_V_data_V_0_ack_out) & (AXI_video_strm_V_data_V_0_state == ap_const_lv2_1)) | ((AXI_video_strm_V_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (1'b0 == AXI_video_strm_V_data_V_0_ack_out)) & ~((1'b0 == AXI_video_strm_V_data_V_0_vld_in) & (1'b1 == AXI_video_strm_V_data_V_0_ack_out))))) begin
            AXI_video_strm_V_data_V_0_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_dest_V_0_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_0_state)) | ((1'b0 == AXI_video_strm_V_dest_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_0_state)))) begin
            AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_0_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_0_state)) | ((1'b0 == AXI_video_strm_V_dest_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_0_state)))) begin
            AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_0_state)) | ((1'b1 == AXI_video_strm_V_dest_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_0_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_dest_V_0_state) & ~((1'b1 == AXI_video_strm_V_dest_V_0_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_0_ack_out)) & ~((1'b0 == AXI_video_strm_V_dest_V_0_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_0_ack_out))))) begin
            AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_0_ack_out) & (1'b1 == AXI_video_strm_V_last_V_0_vld_out))) begin
            AXI_video_strm_V_last_V_0_sel_rd <= ~AXI_video_strm_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (1'b1 == AXI_video_strm_V_last_V_0_ack_in))) begin
            AXI_video_strm_V_last_V_0_sel_wr <= ~AXI_video_strm_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_last_V_0_vld_in) & (1'b1 == AXI_video_strm_V_last_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_0_state)) | ((1'b0 == AXI_video_strm_V_last_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_0_state)))) begin
            AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (1'b0 == AXI_video_strm_V_last_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_0_state)) | ((1'b0 == AXI_video_strm_V_last_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_0_state)))) begin
            AXI_video_strm_V_last_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_0_state)) | ((1'b1 == AXI_video_strm_V_last_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_0_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_last_V_0_state) & ~((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (1'b0 == AXI_video_strm_V_last_V_0_ack_out)) & ~((1'b0 == AXI_video_strm_V_last_V_0_vld_in) & (1'b1 == AXI_video_strm_V_last_V_0_ack_out))))) begin
            AXI_video_strm_V_last_V_0_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_0_ack_out) & (1'b1 == AXI_video_strm_V_user_V_0_vld_out))) begin
            AXI_video_strm_V_user_V_0_sel_rd <= ~AXI_video_strm_V_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (1'b1 == AXI_video_strm_V_user_V_0_ack_in))) begin
            AXI_video_strm_V_user_V_0_sel_wr <= ~AXI_video_strm_V_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_user_V_0_vld_in) & (1'b1 == AXI_video_strm_V_user_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_0_state)) | ((1'b0 == AXI_video_strm_V_user_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_0_state)))) begin
            AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (1'b0 == AXI_video_strm_V_user_V_0_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_0_state)) | ((1'b0 == AXI_video_strm_V_user_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_0_state)))) begin
            AXI_video_strm_V_user_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_0_state)) | ((1'b1 == AXI_video_strm_V_user_V_0_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_0_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_user_V_0_state) & ~((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (1'b0 == AXI_video_strm_V_user_V_0_ack_out)) & ~((1'b0 == AXI_video_strm_V_user_V_0_vld_in) & (1'b1 == AXI_video_strm_V_user_V_0_ack_out))))) begin
            AXI_video_strm_V_user_V_0_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond6_i_fu_287_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_513)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_513)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_fu_298_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572) & ~(1'b0 == eol_2_i_phi_fu_224_p4))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_reg_372))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572))) begin
            ap_reg_ppiten_pp2_it1 <= ap_reg_ppiten_pp2_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_reg_372))) begin
            ap_reg_ppiten_pp2_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        axi_data_V1_i_reg_129 <= tmp_data_V_reg_343;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_7)) begin
        axi_data_V1_i_reg_129 <= axi_data_V_3_i_reg_244;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
        axi_data_V_1_i_reg_184 <= p_Val2_s_phi_fu_212_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
        axi_data_V_1_i_reg_184 <= axi_data_V1_i_reg_129;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_reg_372))) begin
        axi_data_V_3_i_reg_244 <= axi_data_V_1_i_reg_184;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572))) begin
        axi_data_V_3_i_reg_244 <= AXI_video_strm_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        axi_last_V1_i_reg_119 <= tmp_last_V_reg_351;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_7)) begin
        axi_last_V1_i_reg_119 <= axi_last_V_3_i_reg_232;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_reg_372))) begin
        axi_last_V_3_i_reg_232 <= eol_reg_173;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572))) begin
        axi_last_V_3_i_reg_232 <= AXI_video_strm_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b0 == exitcond7_i_reg_372))) begin
        eol_2_i_reg_221 <= eol_i_reg_150;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572))) begin
        eol_2_i_reg_221 <= AXI_video_strm_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
        eol_i_reg_150 <= axi_last_V_2_i_phi_fu_200_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
        eol_i_reg_150 <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
        eol_reg_173 <= axi_last_V_2_i_phi_fu_200_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
        eol_reg_173 <= axi_last_V1_i_reg_119;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_i_reg_139 <= ap_const_lv11_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_7)) begin
        i_i_reg_139 <= i_reg_367;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & (1'b0 == exitcond7_i_fu_298_p2))) begin
        j_i_reg_162 <= j_fu_303_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_i_fu_287_p2))) begin
        j_i_reg_162 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & (1'b0 == exitcond7_i_fu_298_p2))) begin
        sof_1_i_fu_78 <= 1'b0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sof_1_i_fu_78 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_0_load_A)) begin
        AXI_video_strm_V_data_V_0_payload_A <= AXI_video_strm_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_0_load_B)) begin
        AXI_video_strm_V_data_V_0_payload_B <= AXI_video_strm_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_0_load_A)) begin
        AXI_video_strm_V_last_V_0_payload_A <= AXI_video_strm_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_0_load_B)) begin
        AXI_video_strm_V_last_V_0_payload_B <= AXI_video_strm_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_0_load_A)) begin
        AXI_video_strm_V_user_V_0_payload_A <= AXI_video_strm_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_0_load_B)) begin
        AXI_video_strm_V_user_V_0_payload_B <= AXI_video_strm_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & (1'b0 == exitcond7_i_fu_298_p2))) begin
        brmerge_i_reg_381 <= brmerge_i_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
        exitcond7_i_reg_372 <= exitcond7_i_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_reg_367 <= i_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0))) begin
        tmp_data_V_reg_343 <= AXI_video_strm_V_data_V_0_data_out;
        tmp_last_V_reg_351 <= AXI_video_strm_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~((1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done) | (1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done)))) begin
        tmp_i_53_reg_338 <= grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return;
        tmp_i_reg_333 <= grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221)))) begin
        AXI_video_strm_TDATA_blk_n = AXI_video_strm_V_data_V_0_state[1'b0];
    end else begin
        AXI_video_strm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559)))) begin
        AXI_video_strm_V_data_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_data_V_0_sel)) begin
        AXI_video_strm_V_data_V_0_data_out = AXI_video_strm_V_data_V_0_payload_B;
    end else begin
        AXI_video_strm_V_data_V_0_data_out = AXI_video_strm_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559)))) begin
        AXI_video_strm_V_dest_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559)))) begin
        AXI_video_strm_V_last_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_last_V_0_sel)) begin
        AXI_video_strm_V_last_V_0_data_out = AXI_video_strm_V_last_V_0_payload_B;
    end else begin
        AXI_video_strm_V_last_V_0_data_out = AXI_video_strm_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559)))) begin
        AXI_video_strm_V_user_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_user_V_0_sel)) begin
        AXI_video_strm_V_user_V_0_data_out = AXI_video_strm_V_user_V_0_payload_B;
    end else begin
        AXI_video_strm_V_user_V_0_data_out = AXI_video_strm_V_user_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond6_i_fu_287_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond6_i_fu_287_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_459) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_478) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_608) begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_525) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_452) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_615) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_550) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_491) begin
        if (~(1'b0 == brmerge_i_reg_381)) begin
            axi_last_V_2_i_phi_fu_200_p4 = eol_reg_173;
        end else if ((1'b0 == brmerge_i_reg_381)) begin
            axi_last_V_2_i_phi_fu_200_p4 = AXI_video_strm_V_last_V_0_data_out;
        end else begin
            axi_last_V_2_i_phi_fu_200_p4 = ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1;
        end
    end else begin
        axi_last_V_2_i_phi_fu_200_p4 = ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_reg_221))) begin
        eol_2_i_phi_fu_224_p4 = AXI_video_strm_V_last_V_0_data_out;
    end else begin
        eol_2_i_phi_fu_224_p4 = eol_2_i_reg_221;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372))) begin
        eol_i_phi_fu_154_p4 = axi_last_V_2_i_phi_fu_200_p4;
    end else begin
        eol_i_phi_fu_154_p4 = eol_i_reg_150;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372))) begin
        img_V_val_V_blk_n = img_V_val_V_full_n;
    end else begin
        img_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559))) begin
        img_V_val_V_write = 1'b1;
    end else begin
        img_V_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_491) begin
        if (~(1'b0 == brmerge_i_reg_381)) begin
            p_Val2_s_phi_fu_212_p4 = axi_data_V_1_i_reg_184;
        end else if ((1'b0 == brmerge_i_reg_381)) begin
            p_Val2_s_phi_fu_212_p4 = AXI_video_strm_V_data_V_0_data_out;
        end else begin
            p_Val2_s_phi_fu_212_p4 = ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1;
        end
    end else begin
        p_Val2_s_phi_fu_212_p4 = ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_513) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~((1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done) | (1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((~(AXI_video_strm_V_data_V_0_vld_out == 1'b0) & (1'b0 == tmp_user_V_fu_278_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~(AXI_video_strm_V_data_V_0_vld_out == 1'b0) & ~(1'b0 == tmp_user_V_fu_278_p1))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond6_i_fu_287_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end
        end
        ap_ST_pp1_stg0_fsm_5 : begin
            if (~((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_559) & ~(1'b1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end
        end
        ap_ST_pp2_stg0_fsm_6 : begin
            if (~((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572) & ~(1'b1 == ap_reg_ppiten_pp2_it0))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it1) & ap_sig_572) & ~(1'b1 == ap_reg_ppiten_pp2_it0))) begin
                ap_NS_fsm = ap_ST_st10_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            end
        end
        ap_ST_st10_fsm_7 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_TREADY = AXI_video_strm_V_dest_V_0_state[1'b1];

assign AXI_video_strm_V_data_V_0_ack_in = AXI_video_strm_V_data_V_0_state[1'b1];

assign AXI_video_strm_V_data_V_0_load_A = (AXI_video_strm_V_data_V_0_state_cmp_full & ~AXI_video_strm_V_data_V_0_sel_wr);

assign AXI_video_strm_V_data_V_0_load_B = (AXI_video_strm_V_data_V_0_sel_wr & AXI_video_strm_V_data_V_0_state_cmp_full);

assign AXI_video_strm_V_data_V_0_sel = AXI_video_strm_V_data_V_0_sel_rd;

assign AXI_video_strm_V_data_V_0_state_cmp_full = ((AXI_video_strm_V_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_data_V_0_vld_in = AXI_video_strm_TVALID;

assign AXI_video_strm_V_data_V_0_vld_out = AXI_video_strm_V_data_V_0_state[1'b0];

assign AXI_video_strm_V_dest_V_0_vld_in = AXI_video_strm_TVALID;

assign AXI_video_strm_V_last_V_0_ack_in = AXI_video_strm_V_last_V_0_state[1'b1];

assign AXI_video_strm_V_last_V_0_load_A = (AXI_video_strm_V_last_V_0_state_cmp_full & ~AXI_video_strm_V_last_V_0_sel_wr);

assign AXI_video_strm_V_last_V_0_load_B = (AXI_video_strm_V_last_V_0_sel_wr & AXI_video_strm_V_last_V_0_state_cmp_full);

assign AXI_video_strm_V_last_V_0_sel = AXI_video_strm_V_last_V_0_sel_rd;

assign AXI_video_strm_V_last_V_0_state_cmp_full = ((AXI_video_strm_V_last_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_last_V_0_vld_in = AXI_video_strm_TVALID;

assign AXI_video_strm_V_last_V_0_vld_out = AXI_video_strm_V_last_V_0_state[1'b0];

assign AXI_video_strm_V_user_V_0_ack_in = AXI_video_strm_V_user_V_0_state[1'b1];

assign AXI_video_strm_V_user_V_0_load_A = (AXI_video_strm_V_user_V_0_state_cmp_full & ~AXI_video_strm_V_user_V_0_sel_wr);

assign AXI_video_strm_V_user_V_0_load_B = (AXI_video_strm_V_user_V_0_sel_wr & AXI_video_strm_V_user_V_0_state_cmp_full);

assign AXI_video_strm_V_user_V_0_sel = AXI_video_strm_V_user_V_0_sel_rd;

assign AXI_video_strm_V_user_V_0_state_cmp_full = ((AXI_video_strm_V_user_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_user_V_0_vld_in = AXI_video_strm_TVALID;

assign AXI_video_strm_V_user_V_0_vld_out = AXI_video_strm_V_user_V_0_state[1'b0];

assign ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1 = 'bx;

assign ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1 = 'bx;

always @ (*) begin
    ap_sig_26 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_452 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_459 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_478 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_491 = ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond7_i_reg_372));
end

always @ (*) begin
    ap_sig_513 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_525 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_550 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_559 = (((1'b0 == exitcond7_i_reg_372) & (1'b0 == brmerge_i_reg_381) & (AXI_video_strm_V_data_V_0_vld_out == 1'b0)) | ((1'b0 == exitcond7_i_reg_372) & (img_V_val_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_572 = ((1'b0 == eol_2_i_reg_221) & (AXI_video_strm_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_608 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_615 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign brmerge_i_fu_312_p2 = (sof_1_i_fu_78 | eol_i_phi_fu_154_p4);

assign exitcond6_i_fu_287_p2 = ((i_i_reg_139 == tmp_i_reg_333) ? 1'b1 : 1'b0);

assign exitcond7_i_fu_298_p2 = ((j_i_reg_162 == tmp_i_53_reg_338) ? 1'b1 : 1'b0);

assign grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start = ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start;

assign grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start = ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start;

assign i_fu_292_p2 = (i_i_reg_139 + ap_const_lv11_1);

assign img_V_val_V_din = p_Val2_s_phi_fu_212_p4;

assign j_fu_303_p2 = (j_i_reg_162 + ap_const_lv11_1);

assign tmp_user_V_fu_278_p1 = AXI_video_strm_V_user_V_0_data_out;

endmodule //bd_776d_vsc_0_v_vscaler_AXIvideo2MultiPixStream
