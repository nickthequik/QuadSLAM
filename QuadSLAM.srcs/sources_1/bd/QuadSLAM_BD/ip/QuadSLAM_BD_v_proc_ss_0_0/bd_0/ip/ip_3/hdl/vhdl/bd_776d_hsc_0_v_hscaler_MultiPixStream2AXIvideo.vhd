-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    StrmMPix_V_val_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    StrmMPix_V_val_V_empty_n : IN STD_LOGIC;
    StrmMPix_V_val_V_read : OUT STD_LOGIC;
    AXI_video_strm_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    AXI_video_strm_TVALID : OUT STD_LOGIC;
    AXI_video_strm_TREADY : IN STD_LOGIC;
    AXI_video_strm_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    Height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    Height_empty_n : IN STD_LOGIC;
    Height_read : OUT STD_LOGIC;
    WidthOut_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    WidthOut_empty_n : IN STD_LOGIC;
    WidthOut_read : OUT STD_LOGIC;
    ColorMode_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    ColorMode_empty_n : IN STD_LOGIC;
    ColorMode_read : OUT STD_LOGIC );
end;


architecture behav of bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_pp0_stg0_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_23 : BOOLEAN;
    signal AXI_video_strm_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_keep_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_keep_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_strb_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_strb_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_id_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_id_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_dest_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_dest_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mapComp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mapComp_ce0 : STD_LOGIC;
    signal mapComp_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal StrmMPix_V_val_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_466 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond6_i_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal Height_blk_n : STD_LOGIC;
    signal WidthOut_blk_n : STD_LOGIC;
    signal ColorMode_blk_n : STD_LOGIC;
    signal j_i_reg_238 : STD_LOGIC_VECTOR (10 downto 0);
    signal Height_read_reg_498 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_502 : BOOLEAN;
    signal tmp_22_fu_249_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_reg_503 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_253_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_reg_508 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_273_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_reg_513 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_285_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_521 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_518 : BOOLEAN;
    signal exitcond4_i_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_305_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_reg_538 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_i_fu_308_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_i_reg_543 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_313_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_reg_548 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_317_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_reg_553 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_321_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_558 : STD_LOGIC_VECTOR (1 downto 0);
    signal map_2_V_1_fu_354_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_544 : BOOLEAN;
    signal map_2_V_3_fu_370_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_5_fu_378_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond5_i_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_557 : BOOLEAN;
    signal ap_sig_572 : BOOLEAN;
    signal i_1_fu_395_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1_reg_582 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond6_i_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_582 : BOOLEAN;
    signal j_fu_410_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal axi_last_V_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_reg_596 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_482_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal map_V_2_i_reg_179 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_V_1_i_reg_191 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_4_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_i_reg_215 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_i_reg_227 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_cast_fu_300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_user_V_fu_110 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_261_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_fu_265_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_24_fu_257_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_i_cast_fu_291_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_295_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sel_tmp_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal map_0_V_cast_fu_330_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp2_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal map_2_V_fu_340_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_2_fu_362_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_cast_i_fu_386_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_cast_i_fu_401_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal pix_val_0_V_fu_425_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_449_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_449_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_460_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_471_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_471_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_460_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_449_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);

    component bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo_mapComp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    mapComp_U : component bd_776d_hsc_0_v_hscaler_MultiPixStream2AXIvideo_mapComp
    generic map (
        DataWidth => 2,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mapComp_address0,
        ce0 => mapComp_ce0,
        q0 => mapComp_q0);

    v_hscaler_mux_3to1_sel2_8_1_U80 : component bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => pix_val_0_V_fu_425_p1,
        din2 => tmp_fu_449_p2,
        din3 => tmp_fu_449_p3,
        din4 => tmp_27_reg_548,
        dout => tmp_fu_449_p5);

    v_hscaler_mux_3to1_sel2_8_1_U81 : component bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => pix_val_0_V_fu_425_p1,
        din2 => tmp_s_fu_460_p2,
        din3 => tmp_s_fu_460_p3,
        din4 => tmp_28_reg_553,
        dout => tmp_s_fu_460_p5);

    v_hscaler_mux_3to1_sel2_8_1_U82 : component bd_776d_hsc_0_v_hscaler_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => pix_val_0_V_fu_425_p1,
        din2 => tmp_1_fu_471_p2,
        din3 => tmp_1_fu_471_p3,
        din4 => tmp_29_reg_558,
        dout => tmp_1_fu_471_p5);





    AXI_video_strm_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_out))) then 
                                        AXI_video_strm_V_data_V_1_sel_rd <= not(AXI_video_strm_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_in))) then 
                                        AXI_video_strm_V_data_V_1_sel_wr <= not(AXI_video_strm_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)) or ((AXI_video_strm_V_data_V_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out)))))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_out))) then 
                                        AXI_video_strm_V_dest_V_1_sel_rd <= not(AXI_video_strm_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out)))))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_out))) then 
                                        AXI_video_strm_V_id_V_1_sel_rd <= not(AXI_video_strm_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out)))))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_out))) then 
                                        AXI_video_strm_V_keep_V_1_sel_rd <= not(AXI_video_strm_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out)))))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_out))) then 
                                        AXI_video_strm_V_last_V_1_sel_rd <= not(AXI_video_strm_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_in))) then 
                                        AXI_video_strm_V_last_V_1_sel_wr <= not(AXI_video_strm_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out)))))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_out))) then 
                                        AXI_video_strm_V_strb_V_1_sel_rd <= not(AXI_video_strm_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out)))))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_out))) then 
                                        AXI_video_strm_V_user_V_1_sel_rd <= not(AXI_video_strm_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_in))) then 
                                        AXI_video_strm_V_user_V_1_sel_wr <= not(AXI_video_strm_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out)))))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond5_i_fu_390_p2)) and not(ap_sig_572))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_i_fu_405_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond5_i_fu_390_p2) and not(ap_sig_572))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_i_fu_405_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond5_i_fu_390_p2) and not(ap_sig_572)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_i_fu_405_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond5_i_fu_390_p2) and not(ap_sig_572))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_i_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_i_fu_405_p2)))) then 
                i1_i_reg_227 <= i_1_reg_582;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond4_i_fu_279_p2)))) then 
                i1_i_reg_227 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_i_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                i_i_reg_215 <= i_reg_521;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_502))) then 
                i_i_reg_215 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_i_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond5_i_fu_390_p2) and not(ap_sig_572))) then 
                j_i_reg_238 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_i_fu_405_p2))) then 
                j_i_reg_238 <= j_fu_410_p2;
            end if; 
        end if;
    end process;

    tmp_user_V_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
                tmp_user_V_fu_110 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond4_i_fu_279_p2)))) then 
                tmp_user_V_fu_110 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_A)) then
                AXI_video_strm_V_data_V_1_payload_A <= tmp_data_V_fu_482_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_B)) then
                AXI_video_strm_V_data_V_1_payload_B <= tmp_data_V_fu_482_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_A)) then
                AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_596;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_B)) then
                AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_596;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_A)) then
                AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_B)) then
                AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_502))) then
                Height_read_reg_498 <= Height_dout;
                tmp_22_reg_503 <= tmp_22_fu_249_p1;
                tmp_23_reg_508 <= tmp_23_fu_253_p1;
                tmp_8_reg_513 <= tmp_8_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then
                ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1 <= exitcond6_i_reg_587;
                exitcond6_i_reg_587 <= exitcond6_i_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_i_fu_405_p2))) then
                axi_last_V_reg_596 <= axi_last_V_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not(ap_sig_572))) then
                i_1_reg_582 <= i_1_fu_395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_reg_521 <= i_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                map_2_V_4_reg_203 <= map_2_V_5_fu_378_p3;
                map_V_1_i_reg_191 <= map_2_V_3_fu_370_p3;
                map_V_2_i_reg_179 <= map_2_V_1_fu_354_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond4_i_fu_279_p2)))) then
                tmp_21_i_reg_543 <= tmp_21_i_fu_308_p2;
                tmp_26_reg_538 <= tmp_26_fu_305_p1;
                tmp_27_reg_548 <= tmp_27_fu_313_p1;
                tmp_28_reg_553 <= tmp_28_fu_317_p1;
                tmp_29_reg_558 <= tmp_29_fu_321_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_1_ack_in, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_502, exitcond4_i_fu_279_p2, exitcond5_i_fu_390_p2, ap_sig_572, exitcond6_i_fu_405_p2, ap_sig_582)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_502)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond4_i_fu_279_p2))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st4_fsm_3 => 
                if ((not((ap_const_lv1_0 = exitcond5_i_fu_390_p2)) and not(ap_sig_572))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond5_i_fu_390_p2) and not(ap_sig_572))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_pp0_stg0_fsm_4 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_i_fu_405_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_i_fu_405_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    AXI_video_strm_TDATA <= AXI_video_strm_V_data_V_1_data_out;

    AXI_video_strm_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_1_state, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1)))) then 
            AXI_video_strm_TDATA_blk_n <= AXI_video_strm_V_data_V_1_state(1);
        else 
            AXI_video_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_TDEST <= AXI_video_strm_V_dest_V_1_data_out;
    AXI_video_strm_TID <= AXI_video_strm_V_id_V_1_data_out;
    AXI_video_strm_TKEEP <= AXI_video_strm_V_keep_V_1_data_out;
    AXI_video_strm_TLAST <= AXI_video_strm_V_last_V_1_data_out;
    AXI_video_strm_TSTRB <= AXI_video_strm_V_strb_V_1_data_out;
    AXI_video_strm_TUSER <= AXI_video_strm_V_user_V_1_data_out;
    AXI_video_strm_TVALID <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_data_V_1_ack_in <= AXI_video_strm_V_data_V_1_state(1);
    AXI_video_strm_V_data_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_data_V_1_data_out_assign_proc : process(AXI_video_strm_V_data_V_1_payload_A, AXI_video_strm_V_data_V_1_payload_B, AXI_video_strm_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_sel)) then 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_B;
        else 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_load_A <= (AXI_video_strm_V_data_V_1_state_cmp_full and not(AXI_video_strm_V_data_V_1_sel_wr));
    AXI_video_strm_V_data_V_1_load_B <= (AXI_video_strm_V_data_V_1_sel_wr and AXI_video_strm_V_data_V_1_state_cmp_full);
    AXI_video_strm_V_data_V_1_sel <= AXI_video_strm_V_data_V_1_sel_rd;
    AXI_video_strm_V_data_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_data_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_vld_out <= AXI_video_strm_V_data_V_1_state(0);
    AXI_video_strm_V_dest_V_1_ack_in <= AXI_video_strm_V_dest_V_1_state(1);
    AXI_video_strm_V_dest_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_dest_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_dest_V_1_sel <= AXI_video_strm_V_dest_V_1_sel_rd;

    AXI_video_strm_V_dest_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_1_vld_out <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_id_V_1_ack_in <= AXI_video_strm_V_id_V_1_state(1);
    AXI_video_strm_V_id_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_id_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_id_V_1_sel <= AXI_video_strm_V_id_V_1_sel_rd;

    AXI_video_strm_V_id_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_id_V_1_vld_out <= AXI_video_strm_V_id_V_1_state(0);
    AXI_video_strm_V_keep_V_1_ack_in <= AXI_video_strm_V_keep_V_1_state(1);
    AXI_video_strm_V_keep_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_keep_V_1_data_out <= ap_const_lv3_7;
    AXI_video_strm_V_keep_V_1_sel <= AXI_video_strm_V_keep_V_1_sel_rd;

    AXI_video_strm_V_keep_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_keep_V_1_vld_out <= AXI_video_strm_V_keep_V_1_state(0);
    AXI_video_strm_V_last_V_1_ack_in <= AXI_video_strm_V_last_V_1_state(1);
    AXI_video_strm_V_last_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_last_V_1_data_out_assign_proc : process(AXI_video_strm_V_last_V_1_payload_A, AXI_video_strm_V_last_V_1_payload_B, AXI_video_strm_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_sel)) then 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_B;
        else 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_load_A <= (AXI_video_strm_V_last_V_1_state_cmp_full and not(AXI_video_strm_V_last_V_1_sel_wr));
    AXI_video_strm_V_last_V_1_load_B <= (AXI_video_strm_V_last_V_1_sel_wr and AXI_video_strm_V_last_V_1_state_cmp_full);
    AXI_video_strm_V_last_V_1_sel <= AXI_video_strm_V_last_V_1_sel_rd;
    AXI_video_strm_V_last_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_last_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_vld_out <= AXI_video_strm_V_last_V_1_state(0);
    AXI_video_strm_V_strb_V_1_ack_in <= AXI_video_strm_V_strb_V_1_state(1);
    AXI_video_strm_V_strb_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_strb_V_1_data_out <= ap_const_lv3_0;
    AXI_video_strm_V_strb_V_1_sel <= AXI_video_strm_V_strb_V_1_sel_rd;

    AXI_video_strm_V_strb_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_strb_V_1_vld_out <= AXI_video_strm_V_strb_V_1_state(0);
    AXI_video_strm_V_user_V_1_ack_in <= AXI_video_strm_V_user_V_1_state(1);
    AXI_video_strm_V_user_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_user_V_1_data_out_assign_proc : process(AXI_video_strm_V_user_V_1_payload_A, AXI_video_strm_V_user_V_1_payload_B, AXI_video_strm_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_sel)) then 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_B;
        else 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_load_A <= (AXI_video_strm_V_user_V_1_state_cmp_full and not(AXI_video_strm_V_user_V_1_sel_wr));
    AXI_video_strm_V_user_V_1_load_B <= (AXI_video_strm_V_user_V_1_sel_wr and AXI_video_strm_V_user_V_1_state_cmp_full);
    AXI_video_strm_V_user_V_1_sel <= AXI_video_strm_V_user_V_1_sel_rd;
    AXI_video_strm_V_user_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_user_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_vld_out <= AXI_video_strm_V_user_V_1_state(0);

    ColorMode_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, ColorMode_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            ColorMode_blk_n <= ColorMode_empty_n;
        else 
            ColorMode_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ColorMode_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_502)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_502))) then 
            ColorMode_read <= ap_const_logic_1;
        else 
            ColorMode_read <= ap_const_logic_0;
        end if; 
    end process;


    Height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, Height_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            Height_blk_n <= Height_empty_n;
        else 
            Height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Height_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_502)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_502))) then 
            Height_read <= ap_const_logic_1;
        else 
            Height_read <= ap_const_logic_0;
        end if; 
    end process;


    StrmMPix_V_val_V_blk_n_assign_proc : process(StrmMPix_V_val_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, exitcond6_i_reg_587)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587))) then 
            StrmMPix_V_val_V_blk_n <= StrmMPix_V_val_V_empty_n;
        else 
            StrmMPix_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    StrmMPix_V_val_V_read_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_i_reg_587, ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1, ap_sig_582)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond6_i_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_582 or ((ap_const_lv1_0 = exitcond6_i_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_i_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            StrmMPix_V_val_V_read <= ap_const_logic_1;
        else 
            StrmMPix_V_val_V_read <= ap_const_logic_0;
        end if; 
    end process;


    WidthOut_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, WidthOut_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            WidthOut_blk_n <= WidthOut_empty_n;
        else 
            WidthOut_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    WidthOut_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_502)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_502))) then 
            WidthOut_read <= ap_const_logic_1;
        else 
            WidthOut_read <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond5_i_fu_390_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_572)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond5_i_fu_390_p2)) and not(ap_sig_572)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond5_i_fu_390_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_572)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond5_i_fu_390_p2)) and not(ap_sig_572))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_466_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_466 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_502_assign_proc : process(ap_start, ap_done_reg, Height_empty_n, WidthOut_empty_n, ColorMode_empty_n)
    begin
                ap_sig_502 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (Height_empty_n = ap_const_logic_0) or (WidthOut_empty_n = ap_const_logic_0) or (ColorMode_empty_n = ap_const_logic_0));
    end process;


    ap_sig_518_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_518 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_544_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_544 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_557_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_557 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_572_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, AXI_video_strm_V_keep_V_1_ack_in, AXI_video_strm_V_strb_V_1_ack_in, AXI_video_strm_V_user_V_1_ack_in, AXI_video_strm_V_last_V_1_ack_in, AXI_video_strm_V_id_V_1_ack_in, AXI_video_strm_V_dest_V_1_ack_in)
    begin
                ap_sig_572 <= ((AXI_video_strm_V_data_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_keep_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_user_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_last_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_id_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_sig_582_assign_proc : process(StrmMPix_V_val_V_empty_n, exitcond6_i_reg_587)
    begin
                ap_sig_582 <= ((ap_const_lv1_0 = exitcond6_i_reg_587) and (StrmMPix_V_val_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_4_assign_proc : process(ap_sig_466)
    begin
        if (ap_sig_466) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_23)
    begin
        if (ap_sig_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_518)
    begin
        if (ap_sig_518) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_544)
    begin
        if (ap_sig_544) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_557)
    begin
        if (ap_sig_557) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    axi_last_V_fu_416_p2 <= "1" when (j_i_reg_238 = tmp_21_i_reg_543) else "0";
    exitcond4_i_fu_279_p2 <= "1" when (i_i_reg_215 = ap_const_lv2_3) else "0";
    exitcond5_i_fu_390_p2 <= "1" when (i1_cast_i_fu_386_p1 = tmp_26_reg_538) else "0";
    exitcond6_i_fu_405_p2 <= "1" when (j_cast_i_fu_401_p1 = tmp_23_reg_508) else "0";
    i1_cast_i_fu_386_p1 <= std_logic_vector(resize(unsigned(i1_i_reg_227),12));
    i_1_fu_395_p2 <= std_logic_vector(unsigned(i1_i_reg_227) + unsigned(ap_const_lv11_1));
    i_fu_285_p2 <= std_logic_vector(unsigned(i_i_reg_215) + unsigned(ap_const_lv2_1));
    j_cast_i_fu_401_p1 <= std_logic_vector(resize(unsigned(j_i_reg_238),12));
    j_fu_410_p2 <= std_logic_vector(unsigned(j_i_reg_238) + unsigned(ap_const_lv11_1));
    mapComp_address0 <= tmp_9_cast_fu_300_p1(4 - 1 downto 0);

    mapComp_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            mapComp_ce0 <= ap_const_logic_1;
        else 
            mapComp_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    map_0_V_cast_fu_330_p1 <= std_logic_vector(resize(unsigned(mapComp_q0),4));
    map_2_V_1_fu_354_p3 <= 
        map_V_2_i_reg_179 when (sel_tmp2_fu_348_p2(0) = '1') else 
        map_2_V_fu_340_p3;
    map_2_V_2_fu_362_p3 <= 
        map_0_V_cast_fu_330_p1 when (sel_tmp_fu_334_p2(0) = '1') else 
        map_V_1_i_reg_191;
    map_2_V_3_fu_370_p3 <= 
        map_V_1_i_reg_191 when (sel_tmp2_fu_348_p2(0) = '1') else 
        map_2_V_2_fu_362_p3;
    map_2_V_5_fu_378_p3 <= 
        map_0_V_cast_fu_330_p1 when (sel_tmp2_fu_348_p2(0) = '1') else 
        map_2_V_4_reg_203;
    map_2_V_fu_340_p3 <= 
        map_V_2_i_reg_179 when (sel_tmp_fu_334_p2(0) = '1') else 
        map_0_V_cast_fu_330_p1;
    p_shl_cast_fu_265_p3 <= (tmp_25_fu_261_p1 & ap_const_lv2_0);
    pix_val_0_V_fu_425_p1 <= StrmMPix_V_val_V_dout(8 - 1 downto 0);
    sel_tmp2_fu_348_p2 <= "1" when (i_i_reg_215 = ap_const_lv2_0) else "0";
    sel_tmp_fu_334_p2 <= "1" when (i_i_reg_215 = ap_const_lv2_1) else "0";
    tmp_1_fu_471_p2 <= StrmMPix_V_val_V_dout(15 downto 8);
    tmp_1_fu_471_p3 <= StrmMPix_V_val_V_dout(23 downto 16);
    tmp_21_i_fu_308_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(tmp_22_reg_503));
    tmp_22_fu_249_p1 <= WidthOut_dout(11 - 1 downto 0);
    tmp_22_i_cast_fu_291_p1 <= std_logic_vector(resize(unsigned(i_i_reg_215),5));
    tmp_23_fu_253_p1 <= WidthOut_dout(12 - 1 downto 0);
    tmp_24_fu_257_p1 <= ColorMode_dout(5 - 1 downto 0);
    tmp_25_fu_261_p1 <= ColorMode_dout(3 - 1 downto 0);
    tmp_26_fu_305_p1 <= Height_read_reg_498(12 - 1 downto 0);
    tmp_27_fu_313_p1 <= map_2_V_4_reg_203(2 - 1 downto 0);
    tmp_28_fu_317_p1 <= map_V_1_i_reg_191(2 - 1 downto 0);
    tmp_29_fu_321_p1 <= map_V_2_i_reg_179(2 - 1 downto 0);
    tmp_8_fu_273_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_265_p3) - unsigned(tmp_24_fu_257_p1));
        tmp_9_cast_fu_300_p1 <= std_logic_vector(resize(signed(tmp_9_fu_295_p2),64));

    tmp_9_fu_295_p2 <= std_logic_vector(unsigned(tmp_8_reg_513) + unsigned(tmp_22_i_cast_fu_291_p1));
    tmp_data_V_fu_482_p4 <= ((tmp_1_fu_471_p5 & tmp_s_fu_460_p5) & tmp_fu_449_p5);
    tmp_fu_449_p2 <= StrmMPix_V_val_V_dout(15 downto 8);
    tmp_fu_449_p3 <= StrmMPix_V_val_V_dout(23 downto 16);
    tmp_s_fu_460_p2 <= StrmMPix_V_val_V_dout(15 downto 8);
    tmp_s_fu_460_p3 <= StrmMPix_V_val_V_dout(23 downto 16);
end behav;
