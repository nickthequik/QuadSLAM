-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_776d_vsc_0_v_vscaler_AXIvideo2MultiPixStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    AXI_video_strm_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    AXI_video_strm_TVALID : IN STD_LOGIC;
    AXI_video_strm_TREADY : OUT STD_LOGIC;
    AXI_video_strm_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_V_val_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    img_V_val_V_full_n : IN STD_LOGIC;
    img_V_val_V_write : OUT STD_LOGIC;
    Height : IN STD_LOGIC_VECTOR (10 downto 0);
    WidthIn : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of bd_776d_vsc_0_v_vscaler_AXIvideo2MultiPixStream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_pp1_stg0_fsm_5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_pp2_stg0_fsm_6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_st10_fsm_7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_26 : BOOLEAN;
    signal AXI_video_strm_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_452 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_459 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal exitcond7_i_reg_372 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_381 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_6 : STD_LOGIC;
    signal ap_sig_478 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal eol_2_i_reg_221 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_V_val_V_blk_n : STD_LOGIC;
    signal eol_i_reg_150 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_i_reg_162 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_reg_173 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_reg_184 : STD_LOGIC_VECTOR (23 downto 0);
    signal axi_last_V_3_i_reg_232 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_3_i_reg_244 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_513 : BOOLEAN;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_reg_333 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_525 : BOOLEAN;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_53_reg_338 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_data_V_reg_343 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_reg_351 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_550 : BOOLEAN;
    signal i_fu_292_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_367 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond7_i_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_559 : BOOLEAN;
    signal j_fu_303_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal brmerge_i_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_572 : BOOLEAN;
    signal eol_2_i_phi_fu_224_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_idle : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_idle : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready : STD_LOGIC;
    signal axi_last_V1_i_reg_119 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_7 : STD_LOGIC;
    signal ap_sig_608 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_615 : BOOLEAN;
    signal axi_data_V1_i_reg_129 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_i_reg_139 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_i_phi_fu_154_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_phi_fu_200_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_phi_fu_212_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start : STD_LOGIC := '0';
    signal sof_1_i_fu_78 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_278_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_491 : BOOLEAN;

    component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    grp_v_vscaler_reg_unsigned_short_s_fu_256 : component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start,
        ap_done => grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done,
        ap_idle => grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_idle,
        ap_ready => grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready,
        in_r => Height,
        ap_return => grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return);

    grp_v_vscaler_reg_unsigned_short_s_fu_262 : component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start,
        ap_done => grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done,
        ap_idle => grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_idle,
        ap_ready => grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready,
        in_r => WidthIn,
        ap_return => grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return);





    AXI_video_strm_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out))) then 
                                        AXI_video_strm_V_data_V_0_sel_rd <= not(AXI_video_strm_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_in))) then 
                                        AXI_video_strm_V_data_V_0_sel_wr <= not(AXI_video_strm_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_2)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1)) or ((AXI_video_strm_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out)))))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out)))))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_out))) then 
                                        AXI_video_strm_V_last_V_0_sel_rd <= not(AXI_video_strm_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_in))) then 
                                        AXI_video_strm_V_last_V_0_sel_wr <= not(AXI_video_strm_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out)))))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_out))) then 
                                        AXI_video_strm_V_user_V_0_sel_rd <= not(AXI_video_strm_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_in))) then 
                                        AXI_video_strm_V_user_V_0_sel_wr <= not(AXI_video_strm_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state) and not(((ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out)))))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond6_i_fu_287_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_513))) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_ready)) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_513))) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_ready)) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_fu_298_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)) and not((ap_const_lv1_0 = eol_2_i_phi_fu_224_p4)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_reg_372)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_reg_ppiten_pp2_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_reg_372)))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_reg_129_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                axi_data_V1_i_reg_129 <= tmp_data_V_reg_343;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7)) then 
                axi_data_V1_i_reg_129 <= axi_data_V_3_i_reg_244;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then 
                axi_data_V_1_i_reg_184 <= p_Val2_s_phi_fu_212_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                axi_data_V_1_i_reg_184 <= axi_data_V1_i_reg_129;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_reg_372)))) then 
                axi_data_V_3_i_reg_244 <= axi_data_V_1_i_reg_184;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)))) then 
                axi_data_V_3_i_reg_244 <= AXI_video_strm_V_data_V_0_data_out;
            end if; 
        end if;
    end process;

    axi_last_V1_i_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                axi_last_V1_i_reg_119 <= tmp_last_V_reg_351;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7)) then 
                axi_last_V1_i_reg_119 <= axi_last_V_3_i_reg_232;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_reg_372)))) then 
                axi_last_V_3_i_reg_232 <= eol_reg_173;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)))) then 
                axi_last_V_3_i_reg_232 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_2_i_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_lv1_0 = exitcond7_i_reg_372)))) then 
                eol_2_i_reg_221 <= eol_i_reg_150;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)))) then 
                eol_2_i_reg_221 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_i_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then 
                eol_i_reg_150 <= axi_last_V_2_i_phi_fu_200_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                eol_i_reg_150 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then 
                eol_reg_173 <= axi_last_V_2_i_phi_fu_200_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                eol_reg_173 <= axi_last_V1_i_reg_119;
            end if; 
        end if;
    end process;

    i_i_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_i_reg_139 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7)) then 
                i_i_reg_139 <= i_reg_367;
            end if; 
        end if;
    end process;

    j_i_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and (ap_const_lv1_0 = exitcond7_i_fu_298_p2))) then 
                j_i_reg_162 <= j_fu_303_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then 
                j_i_reg_162 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    sof_1_i_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and (ap_const_lv1_0 = exitcond7_i_fu_298_p2))) then 
                sof_1_i_fu_78 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                sof_1_i_fu_78 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_A)) then
                AXI_video_strm_V_data_V_0_payload_A <= AXI_video_strm_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_B)) then
                AXI_video_strm_V_data_V_0_payload_B <= AXI_video_strm_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_A)) then
                AXI_video_strm_V_last_V_0_payload_A <= AXI_video_strm_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_B)) then
                AXI_video_strm_V_last_V_0_payload_B <= AXI_video_strm_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_A)) then
                AXI_video_strm_V_user_V_0_payload_A <= AXI_video_strm_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_B)) then
                AXI_video_strm_V_user_V_0_payload_B <= AXI_video_strm_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and (ap_const_lv1_0 = exitcond7_i_fu_298_p2))) then
                brmerge_i_reg_381 <= brmerge_i_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then
                exitcond7_i_reg_372 <= exitcond7_i_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_reg_367 <= i_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)))) then
                tmp_data_V_reg_343 <= AXI_video_strm_V_data_V_0_data_out;
                tmp_last_V_reg_351 <= AXI_video_strm_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done) or (ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done))))) then
                tmp_i_53_reg_338 <= grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_return;
                tmp_i_reg_333 <= grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, ap_reg_ppiten_pp2_it0, ap_sig_513, grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done, grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done, exitcond6_i_fu_287_p2, ap_sig_559, ap_sig_572, tmp_user_V_fu_278_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_513)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_done) or (ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_user_V_fu_278_p1))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif ((not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_user_V_fu_278_p1)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond6_i_fu_287_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_5;
                end if;
            when ap_ST_pp1_stg0_fsm_5 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_5;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it0)))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_5;
                end if;
            when ap_ST_pp2_stg0_fsm_6 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it0))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it0)))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
                end if;
            when ap_ST_st10_fsm_7 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    AXI_video_strm_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_0_state, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, brmerge_i_reg_381, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221)))) then 
            AXI_video_strm_TDATA_blk_n <= AXI_video_strm_V_data_V_0_state(0);
        else 
            AXI_video_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_TREADY <= AXI_video_strm_V_dest_V_0_state(1);
    AXI_video_strm_V_data_V_0_ack_in <= AXI_video_strm_V_data_V_0_state(1);

    AXI_video_strm_V_data_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, brmerge_i_reg_381, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221, ap_sig_559, ap_sig_572)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559))))) then 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_data_V_0_data_out_assign_proc : process(AXI_video_strm_V_data_V_0_payload_A, AXI_video_strm_V_data_V_0_payload_B, AXI_video_strm_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_sel)) then 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_B;
        else 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_0_load_A <= (AXI_video_strm_V_data_V_0_state_cmp_full and not(AXI_video_strm_V_data_V_0_sel_wr));
    AXI_video_strm_V_data_V_0_load_B <= (AXI_video_strm_V_data_V_0_sel_wr and AXI_video_strm_V_data_V_0_state_cmp_full);
    AXI_video_strm_V_data_V_0_sel <= AXI_video_strm_V_data_V_0_sel_rd;
    AXI_video_strm_V_data_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_data_V_0_vld_in <= AXI_video_strm_TVALID;
    AXI_video_strm_V_data_V_0_vld_out <= AXI_video_strm_V_data_V_0_state(0);

    AXI_video_strm_V_dest_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, brmerge_i_reg_381, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221, ap_sig_559, ap_sig_572)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559))))) then 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_0_vld_in <= AXI_video_strm_TVALID;
    AXI_video_strm_V_last_V_0_ack_in <= AXI_video_strm_V_last_V_0_state(1);

    AXI_video_strm_V_last_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, brmerge_i_reg_381, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221, ap_sig_559, ap_sig_572)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559))))) then 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_last_V_0_data_out_assign_proc : process(AXI_video_strm_V_last_V_0_payload_A, AXI_video_strm_V_last_V_0_payload_B, AXI_video_strm_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_sel)) then 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_B;
        else 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_0_load_A <= (AXI_video_strm_V_last_V_0_state_cmp_full and not(AXI_video_strm_V_last_V_0_sel_wr));
    AXI_video_strm_V_last_V_0_load_B <= (AXI_video_strm_V_last_V_0_sel_wr and AXI_video_strm_V_last_V_0_state_cmp_full);
    AXI_video_strm_V_last_V_0_sel <= AXI_video_strm_V_last_V_0_sel_rd;
    AXI_video_strm_V_last_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_last_V_0_vld_in <= AXI_video_strm_TVALID;
    AXI_video_strm_V_last_V_0_vld_out <= AXI_video_strm_V_last_V_0_state(0);
    AXI_video_strm_V_user_V_0_ack_in <= AXI_video_strm_V_user_V_0_state(1);

    AXI_video_strm_V_user_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, brmerge_i_reg_381, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221, ap_sig_559, ap_sig_572)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and ap_sig_572))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559))))) then 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_user_V_0_data_out_assign_proc : process(AXI_video_strm_V_user_V_0_payload_A, AXI_video_strm_V_user_V_0_payload_B, AXI_video_strm_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_sel)) then 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_B;
        else 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_0_load_A <= (AXI_video_strm_V_user_V_0_state_cmp_full and not(AXI_video_strm_V_user_V_0_sel_wr));
    AXI_video_strm_V_user_V_0_load_B <= (AXI_video_strm_V_user_V_0_sel_wr and AXI_video_strm_V_user_V_0_state_cmp_full);
    AXI_video_strm_V_user_V_0_sel <= AXI_video_strm_V_user_V_0_sel_rd;
    AXI_video_strm_V_user_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_user_V_0_vld_in <= AXI_video_strm_TVALID;
    AXI_video_strm_V_user_V_0_vld_out <= AXI_video_strm_V_user_V_0_state(0);

    ap_done_assign_proc : process(ap_done_reg, exitcond6_i_fu_287_p2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond6_i_fu_287_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond6_i_fu_287_p2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond6_i_fu_287_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1 <= "X";
    ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_sig_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_452_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_452 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_459_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_459 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_478_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_478 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_491_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372)
    begin
                ap_sig_491 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372));
    end process;


    ap_sig_513_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_513 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_525_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_525 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_550_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_550 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_559_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, img_V_val_V_full_n, exitcond7_i_reg_372, brmerge_i_reg_381)
    begin
                ap_sig_559 <= (((ap_const_lv1_0 = exitcond7_i_reg_372) and (ap_const_lv1_0 = brmerge_i_reg_381) and (AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond7_i_reg_372) and (img_V_val_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_572_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, eol_2_i_reg_221)
    begin
                ap_sig_572 <= ((ap_const_lv1_0 = eol_2_i_reg_221) and (AXI_video_strm_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_sig_608_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_608 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_615_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_615 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_5_assign_proc : process(ap_sig_459)
    begin
        if (ap_sig_459) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp2_stg0_fsm_6_assign_proc : process(ap_sig_478)
    begin
        if (ap_sig_478) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_7_assign_proc : process(ap_sig_608)
    begin
        if (ap_sig_608) then 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_26)
    begin
        if (ap_sig_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_525)
    begin
        if (ap_sig_525) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_452)
    begin
        if (ap_sig_452) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_615)
    begin
        if (ap_sig_615) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_550)
    begin
        if (ap_sig_550) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    axi_last_V_2_i_phi_fu_200_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, brmerge_i_reg_381, eol_reg_173, ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1, ap_sig_491)
    begin
        if (ap_sig_491) then
            if (not((ap_const_lv1_0 = brmerge_i_reg_381))) then 
                axi_last_V_2_i_phi_fu_200_p4 <= eol_reg_173;
            elsif ((ap_const_lv1_0 = brmerge_i_reg_381)) then 
                axi_last_V_2_i_phi_fu_200_p4 <= AXI_video_strm_V_last_V_0_data_out;
            else 
                axi_last_V_2_i_phi_fu_200_p4 <= ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1;
            end if;
        else 
            axi_last_V_2_i_phi_fu_200_p4 <= ap_reg_phiprechg_axi_last_V_2_i_reg_195pp1_it1;
        end if; 
    end process;

    brmerge_i_fu_312_p2 <= (sof_1_i_fu_78 or eol_i_phi_fu_154_p4);

    eol_2_i_phi_fu_224_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, ap_sig_cseq_ST_pp2_stg0_fsm_6, ap_reg_ppiten_pp2_it1, eol_2_i_reg_221)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = eol_2_i_reg_221))) then 
            eol_2_i_phi_fu_224_p4 <= AXI_video_strm_V_last_V_0_data_out;
        else 
            eol_2_i_phi_fu_224_p4 <= eol_2_i_reg_221;
        end if; 
    end process;


    eol_i_phi_fu_154_p4_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, eol_i_reg_150, axi_last_V_2_i_phi_fu_200_p4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372))) then 
            eol_i_phi_fu_154_p4 <= axi_last_V_2_i_phi_fu_200_p4;
        else 
            eol_i_phi_fu_154_p4 <= eol_i_reg_150;
        end if; 
    end process;

    exitcond6_i_fu_287_p2 <= "1" when (i_i_reg_139 = tmp_i_reg_333) else "0";
    exitcond7_i_fu_298_p2 <= "1" when (j_i_reg_162 = tmp_i_53_reg_338) else "0";
    grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start <= ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_256_ap_start;
    grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start <= ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_262_ap_start;
    i_fu_292_p2 <= std_logic_vector(unsigned(i_i_reg_139) + unsigned(ap_const_lv11_1));

    img_V_val_V_blk_n_assign_proc : process(img_V_val_V_full_n, ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372))) then 
            img_V_val_V_blk_n <= img_V_val_V_full_n;
        else 
            img_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_V_val_V_din <= p_Val2_s_phi_fu_212_p4;

    img_V_val_V_write_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_5, ap_reg_ppiten_pp1_it1, exitcond7_i_reg_372, ap_sig_559)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond7_i_reg_372) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and ap_sig_559)))) then 
            img_V_val_V_write <= ap_const_logic_1;
        else 
            img_V_val_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_303_p2 <= std_logic_vector(unsigned(j_i_reg_162) + unsigned(ap_const_lv11_1));

    p_Val2_s_phi_fu_212_p4_assign_proc : process(AXI_video_strm_V_data_V_0_data_out, brmerge_i_reg_381, axi_data_V_1_i_reg_184, ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1, ap_sig_491)
    begin
        if (ap_sig_491) then
            if (not((ap_const_lv1_0 = brmerge_i_reg_381))) then 
                p_Val2_s_phi_fu_212_p4 <= axi_data_V_1_i_reg_184;
            elsif ((ap_const_lv1_0 = brmerge_i_reg_381)) then 
                p_Val2_s_phi_fu_212_p4 <= AXI_video_strm_V_data_V_0_data_out;
            else 
                p_Val2_s_phi_fu_212_p4 <= ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1;
            end if;
        else 
            p_Val2_s_phi_fu_212_p4 <= ap_reg_phiprechg_p_Val2_s_reg_208pp1_it1;
        end if; 
    end process;

    tmp_user_V_fu_278_p1 <= AXI_video_strm_V_user_V_0_data_out;
end behav;
