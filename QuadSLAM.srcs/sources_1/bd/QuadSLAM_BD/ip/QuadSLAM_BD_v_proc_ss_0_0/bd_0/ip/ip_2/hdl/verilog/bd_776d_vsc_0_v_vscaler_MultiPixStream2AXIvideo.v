// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_776d_vsc_0_v_vscaler_MultiPixStream2AXIvideo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        StrmMPix_V_val_V_dout,
        StrmMPix_V_val_V_empty_n,
        StrmMPix_V_val_V_read,
        AXI_video_strm_TDATA,
        AXI_video_strm_TVALID,
        AXI_video_strm_TREADY,
        AXI_video_strm_TKEEP,
        AXI_video_strm_TSTRB,
        AXI_video_strm_TUSER,
        AXI_video_strm_TLAST,
        AXI_video_strm_TID,
        AXI_video_strm_TDEST,
        Height,
        WidthOut
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_st3_fsm_2 = 4'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_FFF = 12'b111111111111;
parameter    ap_const_lv11_1 = 11'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] StrmMPix_V_val_V_dout;
input   StrmMPix_V_val_V_empty_n;
output   StrmMPix_V_val_V_read;
output  [23:0] AXI_video_strm_TDATA;
output   AXI_video_strm_TVALID;
input   AXI_video_strm_TREADY;
output  [2:0] AXI_video_strm_TKEEP;
output  [2:0] AXI_video_strm_TSTRB;
output  [0:0] AXI_video_strm_TUSER;
output  [0:0] AXI_video_strm_TLAST;
output  [0:0] AXI_video_strm_TID;
output  [0:0] AXI_video_strm_TDEST;
input  [10:0] Height;
input  [10:0] WidthOut;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg StrmMPix_V_val_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg   [23:0] AXI_video_strm_V_data_V_1_data_out;
reg    AXI_video_strm_V_data_V_1_vld_in;
wire    AXI_video_strm_V_data_V_1_vld_out;
wire    AXI_video_strm_V_data_V_1_ack_in;
wire    AXI_video_strm_V_data_V_1_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_A;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_B;
reg    AXI_video_strm_V_data_V_1_sel_rd;
reg    AXI_video_strm_V_data_V_1_sel_wr;
wire    AXI_video_strm_V_data_V_1_sel;
wire    AXI_video_strm_V_data_V_1_load_A;
wire    AXI_video_strm_V_data_V_1_load_B;
reg   [1:0] AXI_video_strm_V_data_V_1_state;
wire    AXI_video_strm_V_data_V_1_state_cmp_full;
wire   [2:0] AXI_video_strm_V_keep_V_1_data_out;
reg    AXI_video_strm_V_keep_V_1_vld_in;
wire    AXI_video_strm_V_keep_V_1_vld_out;
wire    AXI_video_strm_V_keep_V_1_ack_in;
wire    AXI_video_strm_V_keep_V_1_ack_out;
reg    AXI_video_strm_V_keep_V_1_sel_rd;
wire    AXI_video_strm_V_keep_V_1_sel;
reg   [1:0] AXI_video_strm_V_keep_V_1_state;
wire   [2:0] AXI_video_strm_V_strb_V_1_data_out;
reg    AXI_video_strm_V_strb_V_1_vld_in;
wire    AXI_video_strm_V_strb_V_1_vld_out;
wire    AXI_video_strm_V_strb_V_1_ack_in;
wire    AXI_video_strm_V_strb_V_1_ack_out;
reg    AXI_video_strm_V_strb_V_1_sel_rd;
wire    AXI_video_strm_V_strb_V_1_sel;
reg   [1:0] AXI_video_strm_V_strb_V_1_state;
reg   [0:0] AXI_video_strm_V_user_V_1_data_out;
reg    AXI_video_strm_V_user_V_1_vld_in;
wire    AXI_video_strm_V_user_V_1_vld_out;
wire    AXI_video_strm_V_user_V_1_ack_in;
wire    AXI_video_strm_V_user_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_B;
reg    AXI_video_strm_V_user_V_1_sel_rd;
reg    AXI_video_strm_V_user_V_1_sel_wr;
wire    AXI_video_strm_V_user_V_1_sel;
wire    AXI_video_strm_V_user_V_1_load_A;
wire    AXI_video_strm_V_user_V_1_load_B;
reg   [1:0] AXI_video_strm_V_user_V_1_state;
wire    AXI_video_strm_V_user_V_1_state_cmp_full;
reg   [0:0] AXI_video_strm_V_last_V_1_data_out;
reg    AXI_video_strm_V_last_V_1_vld_in;
wire    AXI_video_strm_V_last_V_1_vld_out;
wire    AXI_video_strm_V_last_V_1_ack_in;
wire    AXI_video_strm_V_last_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_B;
reg    AXI_video_strm_V_last_V_1_sel_rd;
reg    AXI_video_strm_V_last_V_1_sel_wr;
wire    AXI_video_strm_V_last_V_1_sel;
wire    AXI_video_strm_V_last_V_1_load_A;
wire    AXI_video_strm_V_last_V_1_load_B;
reg   [1:0] AXI_video_strm_V_last_V_1_state;
wire    AXI_video_strm_V_last_V_1_state_cmp_full;
wire   [0:0] AXI_video_strm_V_id_V_1_data_out;
reg    AXI_video_strm_V_id_V_1_vld_in;
wire    AXI_video_strm_V_id_V_1_vld_out;
wire    AXI_video_strm_V_id_V_1_ack_in;
wire    AXI_video_strm_V_id_V_1_ack_out;
reg    AXI_video_strm_V_id_V_1_sel_rd;
wire    AXI_video_strm_V_id_V_1_sel;
reg   [1:0] AXI_video_strm_V_id_V_1_state;
wire   [0:0] AXI_video_strm_V_dest_V_1_data_out;
reg    AXI_video_strm_V_dest_V_1_vld_in;
wire    AXI_video_strm_V_dest_V_1_vld_out;
wire    AXI_video_strm_V_dest_V_1_ack_in;
wire    AXI_video_strm_V_dest_V_1_ack_out;
reg    AXI_video_strm_V_dest_V_1_sel_rd;
wire    AXI_video_strm_V_dest_V_1_sel;
reg   [1:0] AXI_video_strm_V_dest_V_1_state;
reg    StrmMPix_V_val_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_448;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] exitcond4_i_reg_260;
reg    AXI_video_strm_TDATA_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1;
reg   [10:0] j_i_reg_141;
reg    ap_sig_472;
wire   [10:0] grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return;
reg   [10:0] tmp_i_reg_236;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_484;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done;
wire   [10:0] grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return;
reg   [10:0] tmp_i_52_reg_241;
wire   [11:0] tmp_31_i_fu_173_p2;
reg   [11:0] tmp_31_i_reg_246;
wire   [0:0] exitcond3_i_fu_179_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_504;
reg    ap_sig_519;
wire   [10:0] i_fu_184_p2;
reg   [10:0] i_reg_255;
wire   [0:0] exitcond4_i_fu_194_p2;
reg    ap_sig_529;
wire   [10:0] j_fu_199_p2;
wire   [0:0] axi_last_V_fu_205_p2;
reg   [0:0] axi_last_V_reg_269;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_idle;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_idle;
wire    grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready;
reg   [10:0] i_i_reg_130;
reg    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start;
reg    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start;
reg   [0:0] tmp_user_V_fu_78;
wire   [11:0] cols_cast_i_fu_169_p1;
wire   [11:0] j_cast_i_fu_190_p1;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 AXI_video_strm_V_data_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_data_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_data_V_1_state = 2'b00;
#0 AXI_video_strm_V_keep_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_keep_V_1_state = 2'b00;
#0 AXI_video_strm_V_strb_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_strb_V_1_state = 2'b00;
#0 AXI_video_strm_V_user_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_user_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_user_V_1_state = 2'b00;
#0 AXI_video_strm_V_last_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_last_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_last_V_1_state = 2'b00;
#0 AXI_video_strm_V_id_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_id_V_1_state = 2'b00;
#0 AXI_video_strm_V_dest_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_dest_V_1_state = 2'b00;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start = 1'b0;
#0 ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start = 1'b0;
end

bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s grp_v_vscaler_reg_unsigned_short_s_fu_152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start),
    .ap_done(grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done),
    .ap_idle(grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_idle),
    .ap_ready(grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready),
    .in_r(Height),
    .ap_return(grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return)
);

bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s grp_v_vscaler_reg_unsigned_short_s_fu_158(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start),
    .ap_done(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done),
    .ap_idle(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_idle),
    .ap_ready(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready),
    .in_r(WidthOut),
    .ap_return(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (1'b1 == AXI_video_strm_V_data_V_1_vld_out))) begin
            AXI_video_strm_V_data_V_1_sel_rd <= ~AXI_video_strm_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_in))) begin
            AXI_video_strm_V_data_V_1_sel_wr <= ~AXI_video_strm_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)) | ((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)) | ((AXI_video_strm_V_data_V_1_state == ap_const_lv2_3) & ~((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out))))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (1'b1 == AXI_video_strm_V_dest_V_1_vld_out))) begin
            AXI_video_strm_V_dest_V_1_sel_rd <= ~AXI_video_strm_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)) | ((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state) & ~((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out))))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (1'b1 == AXI_video_strm_V_id_V_1_vld_out))) begin
            AXI_video_strm_V_id_V_1_sel_rd <= ~AXI_video_strm_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)) | ((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state) & ~((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out))))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (1'b1 == AXI_video_strm_V_keep_V_1_vld_out))) begin
            AXI_video_strm_V_keep_V_1_sel_rd <= ~AXI_video_strm_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)) | ((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state) & ~((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out))))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (1'b1 == AXI_video_strm_V_last_V_1_vld_out))) begin
            AXI_video_strm_V_last_V_1_sel_rd <= ~AXI_video_strm_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_in))) begin
            AXI_video_strm_V_last_V_1_sel_wr <= ~AXI_video_strm_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)) | ((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state) & ~((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out))))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (1'b1 == AXI_video_strm_V_strb_V_1_vld_out))) begin
            AXI_video_strm_V_strb_V_1_sel_rd <= ~AXI_video_strm_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)) | ((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state) & ~((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out))))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (1'b1 == AXI_video_strm_V_user_V_1_vld_out))) begin
            AXI_video_strm_V_user_V_1_sel_rd <= ~AXI_video_strm_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_in))) begin
            AXI_video_strm_V_user_V_1_sel_wr <= ~AXI_video_strm_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)) | ((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state) & ~((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out))))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_472)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_472)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready)) begin
            ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond4_i_fu_194_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond4_i_fu_194_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond4_i_fu_194_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond4_i_fu_194_p2))) begin
        i_i_reg_130 <= i_reg_255;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~((1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) | (1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done)))) begin
        i_i_reg_130 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
        j_i_reg_141 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond4_i_fu_194_p2))) begin
        j_i_reg_141 <= j_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        tmp_user_V_fu_78 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_472)) begin
        tmp_user_V_fu_78 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_A)) begin
        AXI_video_strm_V_data_V_1_payload_A <= StrmMPix_V_val_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_B)) begin
        AXI_video_strm_V_data_V_1_payload_B <= StrmMPix_V_val_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_A)) begin
        AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_B)) begin
        AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_A)) begin
        AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_78;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_B)) begin
        AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_78;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1 <= exitcond4_i_reg_260;
        exitcond4_i_reg_260 <= exitcond4_i_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond4_i_fu_194_p2))) begin
        axi_last_V_reg_269 <= axi_last_V_fu_205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_519)) begin
        i_reg_255 <= i_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~((1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) | (1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done)))) begin
        tmp_31_i_reg_246 <= tmp_31_i_fu_173_p2;
        tmp_i_52_reg_241 <= grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return;
        tmp_i_reg_236 <= grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1)))) begin
        AXI_video_strm_TDATA_blk_n = AXI_video_strm_V_data_V_1_state[1'b1];
    end else begin
        AXI_video_strm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_sel)) begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_B;
    end else begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_sel)) begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_B;
    end else begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_sel)) begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_B;
    end else begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260))) begin
        StrmMPix_V_val_V_blk_n = StrmMPix_V_val_V_empty_n;
    end else begin
        StrmMPix_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond4_i_reg_260) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        StrmMPix_V_val_V_read = 1'b1;
    end else begin
        StrmMPix_V_val_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_448) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_484) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_504) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_472) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~((1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) | (1'b0 == grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((~(1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((1'b0 == exitcond3_i_fu_179_p2) & ~ap_sig_519)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond4_i_fu_194_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_529 | ((1'b0 == exitcond4_i_reg_260) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond4_i_fu_194_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_TDATA = AXI_video_strm_V_data_V_1_data_out;

assign AXI_video_strm_TDEST = AXI_video_strm_V_dest_V_1_data_out;

assign AXI_video_strm_TID = AXI_video_strm_V_id_V_1_data_out;

assign AXI_video_strm_TKEEP = AXI_video_strm_V_keep_V_1_data_out;

assign AXI_video_strm_TLAST = AXI_video_strm_V_last_V_1_data_out;

assign AXI_video_strm_TSTRB = AXI_video_strm_V_strb_V_1_data_out;

assign AXI_video_strm_TUSER = AXI_video_strm_V_user_V_1_data_out;

assign AXI_video_strm_TVALID = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_data_V_1_ack_in = AXI_video_strm_V_data_V_1_state[1'b1];

assign AXI_video_strm_V_data_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_data_V_1_load_A = (AXI_video_strm_V_data_V_1_state_cmp_full & ~AXI_video_strm_V_data_V_1_sel_wr);

assign AXI_video_strm_V_data_V_1_load_B = (AXI_video_strm_V_data_V_1_sel_wr & AXI_video_strm_V_data_V_1_state_cmp_full);

assign AXI_video_strm_V_data_V_1_sel = AXI_video_strm_V_data_V_1_sel_rd;

assign AXI_video_strm_V_data_V_1_state_cmp_full = ((AXI_video_strm_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_data_V_1_vld_out = AXI_video_strm_V_data_V_1_state[1'b0];

assign AXI_video_strm_V_dest_V_1_ack_in = AXI_video_strm_V_dest_V_1_state[1'b1];

assign AXI_video_strm_V_dest_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_dest_V_1_data_out = 1'b0;

assign AXI_video_strm_V_dest_V_1_sel = AXI_video_strm_V_dest_V_1_sel_rd;

assign AXI_video_strm_V_dest_V_1_vld_out = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_id_V_1_ack_in = AXI_video_strm_V_id_V_1_state[1'b1];

assign AXI_video_strm_V_id_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_id_V_1_data_out = 1'b0;

assign AXI_video_strm_V_id_V_1_sel = AXI_video_strm_V_id_V_1_sel_rd;

assign AXI_video_strm_V_id_V_1_vld_out = AXI_video_strm_V_id_V_1_state[1'b0];

assign AXI_video_strm_V_keep_V_1_ack_in = AXI_video_strm_V_keep_V_1_state[1'b1];

assign AXI_video_strm_V_keep_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_keep_V_1_data_out = ap_const_lv3_7;

assign AXI_video_strm_V_keep_V_1_sel = AXI_video_strm_V_keep_V_1_sel_rd;

assign AXI_video_strm_V_keep_V_1_vld_out = AXI_video_strm_V_keep_V_1_state[1'b0];

assign AXI_video_strm_V_last_V_1_ack_in = AXI_video_strm_V_last_V_1_state[1'b1];

assign AXI_video_strm_V_last_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_last_V_1_load_A = (AXI_video_strm_V_last_V_1_state_cmp_full & ~AXI_video_strm_V_last_V_1_sel_wr);

assign AXI_video_strm_V_last_V_1_load_B = (AXI_video_strm_V_last_V_1_sel_wr & AXI_video_strm_V_last_V_1_state_cmp_full);

assign AXI_video_strm_V_last_V_1_sel = AXI_video_strm_V_last_V_1_sel_rd;

assign AXI_video_strm_V_last_V_1_state_cmp_full = ((AXI_video_strm_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_last_V_1_vld_out = AXI_video_strm_V_last_V_1_state[1'b0];

assign AXI_video_strm_V_strb_V_1_ack_in = AXI_video_strm_V_strb_V_1_state[1'b1];

assign AXI_video_strm_V_strb_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_strb_V_1_data_out = ap_const_lv3_0;

assign AXI_video_strm_V_strb_V_1_sel = AXI_video_strm_V_strb_V_1_sel_rd;

assign AXI_video_strm_V_strb_V_1_vld_out = AXI_video_strm_V_strb_V_1_state[1'b0];

assign AXI_video_strm_V_user_V_1_ack_in = AXI_video_strm_V_user_V_1_state[1'b1];

assign AXI_video_strm_V_user_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_user_V_1_load_A = (AXI_video_strm_V_user_V_1_state_cmp_full & ~AXI_video_strm_V_user_V_1_sel_wr);

assign AXI_video_strm_V_user_V_1_load_B = (AXI_video_strm_V_user_V_1_sel_wr & AXI_video_strm_V_user_V_1_state_cmp_full);

assign AXI_video_strm_V_user_V_1_sel = AXI_video_strm_V_user_V_1_sel_rd;

assign AXI_video_strm_V_user_V_1_state_cmp_full = ((AXI_video_strm_V_user_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_user_V_1_vld_out = AXI_video_strm_V_user_V_1_state[1'b0];

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_448 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_472 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_484 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_504 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_519 = ((AXI_video_strm_V_data_V_1_ack_in == 1'b0) | (AXI_video_strm_V_keep_V_1_ack_in == 1'b0) | (AXI_video_strm_V_strb_V_1_ack_in == 1'b0) | (AXI_video_strm_V_user_V_1_ack_in == 1'b0) | (AXI_video_strm_V_last_V_1_ack_in == 1'b0) | (AXI_video_strm_V_id_V_1_ack_in == 1'b0) | (AXI_video_strm_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_sig_529 = ((1'b0 == exitcond4_i_reg_260) & (StrmMPix_V_val_V_empty_n == 1'b0));
end

assign axi_last_V_fu_205_p2 = ((j_cast_i_fu_190_p1 == tmp_31_i_reg_246) ? 1'b1 : 1'b0);

assign cols_cast_i_fu_169_p1 = grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return;

assign exitcond3_i_fu_179_p2 = ((i_i_reg_130 == tmp_i_reg_236) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_194_p2 = ((j_i_reg_141 == tmp_i_52_reg_241) ? 1'b1 : 1'b0);

assign grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start = ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start;

assign grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start = ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start;

assign i_fu_184_p2 = (i_i_reg_130 + ap_const_lv11_1);

assign j_cast_i_fu_190_p1 = j_i_reg_141;

assign j_fu_199_p2 = (j_i_reg_141 + ap_const_lv11_1);

assign tmp_31_i_fu_173_p2 = ($signed(cols_cast_i_fu_169_p1) + $signed(ap_const_lv12_FFF));

endmodule //bd_776d_vsc_0_v_vscaler_MultiPixStream2AXIvideo
