-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_776d_vsc_0_v_vscaler_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    StrmMPix_V_val_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    StrmMPix_V_val_V_empty_n : IN STD_LOGIC;
    StrmMPix_V_val_V_read : OUT STD_LOGIC;
    AXI_video_strm_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    AXI_video_strm_TVALID : OUT STD_LOGIC;
    AXI_video_strm_TREADY : IN STD_LOGIC;
    AXI_video_strm_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    Height : IN STD_LOGIC_VECTOR (10 downto 0);
    WidthOut : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of bd_776d_vsc_0_v_vscaler_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_pp0_stg0_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal AXI_video_strm_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_keep_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_keep_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_strb_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_strb_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_id_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_id_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_dest_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_dest_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal StrmMPix_V_val_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_448 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond4_i_reg_260 : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_i_reg_141 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_472 : BOOLEAN;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_reg_236 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_484 : BOOLEAN;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_52_reg_241 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_i_fu_173_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_i_reg_246 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond3_i_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_504 : BOOLEAN;
    signal ap_sig_519 : BOOLEAN;
    signal i_fu_184_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_255 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_i_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_529 : BOOLEAN;
    signal j_fu_199_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal axi_last_V_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_reg_269 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_idle : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_idle : STD_LOGIC;
    signal grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready : STD_LOGIC;
    signal i_i_reg_130 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start : STD_LOGIC := '0';
    signal tmp_user_V_fu_78 : STD_LOGIC_VECTOR (0 downto 0);
    signal cols_cast_i_fu_169_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_cast_i_fu_190_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    grp_v_vscaler_reg_unsigned_short_s_fu_152 : component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start,
        ap_done => grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done,
        ap_idle => grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_idle,
        ap_ready => grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready,
        in_r => Height,
        ap_return => grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return);

    grp_v_vscaler_reg_unsigned_short_s_fu_158 : component bd_776d_vsc_0_v_vscaler_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start,
        ap_done => grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done,
        ap_idle => grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_idle,
        ap_ready => grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready,
        in_r => WidthOut,
        ap_return => grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return);





    AXI_video_strm_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_out))) then 
                                        AXI_video_strm_V_data_V_1_sel_rd <= not(AXI_video_strm_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_in))) then 
                                        AXI_video_strm_V_data_V_1_sel_wr <= not(AXI_video_strm_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)) or ((AXI_video_strm_V_data_V_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out)))))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_out))) then 
                                        AXI_video_strm_V_dest_V_1_sel_rd <= not(AXI_video_strm_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out)))))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_out))) then 
                                        AXI_video_strm_V_id_V_1_sel_rd <= not(AXI_video_strm_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out)))))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_out))) then 
                                        AXI_video_strm_V_keep_V_1_sel_rd <= not(AXI_video_strm_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out)))))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_out))) then 
                                        AXI_video_strm_V_last_V_1_sel_rd <= not(AXI_video_strm_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_in))) then 
                                        AXI_video_strm_V_last_V_1_sel_wr <= not(AXI_video_strm_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out)))))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_out))) then 
                                        AXI_video_strm_V_strb_V_1_sel_rd <= not(AXI_video_strm_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out)))))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_out))) then 
                                        AXI_video_strm_V_user_V_1_sel_rd <= not(AXI_video_strm_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_in))) then 
                                        AXI_video_strm_V_user_V_1_sel_wr <= not(AXI_video_strm_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out)))))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_179_p2)) and not(ap_sig_519))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_472))) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_ready)) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_472))) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_ready)) then 
                    ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond4_i_fu_194_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_179_p2) and not(ap_sig_519))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond4_i_fu_194_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_179_p2) and not(ap_sig_519)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond4_i_fu_194_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_179_p2) and not(ap_sig_519))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond4_i_fu_194_p2)))) then 
                i_i_reg_130 <= i_reg_255;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) or (ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done))))) then 
                i_i_reg_130 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_i_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_179_p2) and not(ap_sig_519))) then 
                j_i_reg_141 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond4_i_fu_194_p2))) then 
                j_i_reg_141 <= j_fu_199_p2;
            end if; 
        end if;
    end process;

    tmp_user_V_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
                tmp_user_V_fu_78 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_472))) then 
                tmp_user_V_fu_78 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_A)) then
                AXI_video_strm_V_data_V_1_payload_A <= StrmMPix_V_val_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_B)) then
                AXI_video_strm_V_data_V_1_payload_B <= StrmMPix_V_val_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_A)) then
                AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_269;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_B)) then
                AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_269;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_A)) then
                AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_78;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_B)) then
                AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_78;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then
                ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1 <= exitcond4_i_reg_260;
                exitcond4_i_reg_260 <= exitcond4_i_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond4_i_fu_194_p2))) then
                axi_last_V_reg_269 <= axi_last_V_fu_205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_519))) then
                i_reg_255 <= i_fu_184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) or (ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done))))) then
                tmp_31_i_reg_246 <= tmp_31_i_fu_173_p2;
                tmp_i_52_reg_241 <= grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return;
                tmp_i_reg_236 <= grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_1_ack_in, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_472, grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done, grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done, exitcond3_i_fu_179_p2, ap_sig_519, exitcond4_i_fu_194_p2, ap_sig_529)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_472)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_done) or (ap_const_logic_0 = grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((not((ap_const_lv1_0 = exitcond3_i_fu_179_p2)) and not(ap_sig_519))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond3_i_fu_179_p2) and not(ap_sig_519))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_3 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond4_i_fu_194_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond4_i_fu_194_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    AXI_video_strm_TDATA <= AXI_video_strm_V_data_V_1_data_out;

    AXI_video_strm_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_1_state, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1)))) then 
            AXI_video_strm_TDATA_blk_n <= AXI_video_strm_V_data_V_1_state(1);
        else 
            AXI_video_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_TDEST <= AXI_video_strm_V_dest_V_1_data_out;
    AXI_video_strm_TID <= AXI_video_strm_V_id_V_1_data_out;
    AXI_video_strm_TKEEP <= AXI_video_strm_V_keep_V_1_data_out;
    AXI_video_strm_TLAST <= AXI_video_strm_V_last_V_1_data_out;
    AXI_video_strm_TSTRB <= AXI_video_strm_V_strb_V_1_data_out;
    AXI_video_strm_TUSER <= AXI_video_strm_V_user_V_1_data_out;
    AXI_video_strm_TVALID <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_data_V_1_ack_in <= AXI_video_strm_V_data_V_1_state(1);
    AXI_video_strm_V_data_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_data_V_1_data_out_assign_proc : process(AXI_video_strm_V_data_V_1_payload_A, AXI_video_strm_V_data_V_1_payload_B, AXI_video_strm_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_sel)) then 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_B;
        else 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_load_A <= (AXI_video_strm_V_data_V_1_state_cmp_full and not(AXI_video_strm_V_data_V_1_sel_wr));
    AXI_video_strm_V_data_V_1_load_B <= (AXI_video_strm_V_data_V_1_sel_wr and AXI_video_strm_V_data_V_1_state_cmp_full);
    AXI_video_strm_V_data_V_1_sel <= AXI_video_strm_V_data_V_1_sel_rd;
    AXI_video_strm_V_data_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_data_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_vld_out <= AXI_video_strm_V_data_V_1_state(0);
    AXI_video_strm_V_dest_V_1_ack_in <= AXI_video_strm_V_dest_V_1_state(1);
    AXI_video_strm_V_dest_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_dest_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_dest_V_1_sel <= AXI_video_strm_V_dest_V_1_sel_rd;

    AXI_video_strm_V_dest_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_1_vld_out <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_id_V_1_ack_in <= AXI_video_strm_V_id_V_1_state(1);
    AXI_video_strm_V_id_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_id_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_id_V_1_sel <= AXI_video_strm_V_id_V_1_sel_rd;

    AXI_video_strm_V_id_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_id_V_1_vld_out <= AXI_video_strm_V_id_V_1_state(0);
    AXI_video_strm_V_keep_V_1_ack_in <= AXI_video_strm_V_keep_V_1_state(1);
    AXI_video_strm_V_keep_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_keep_V_1_data_out <= ap_const_lv3_7;
    AXI_video_strm_V_keep_V_1_sel <= AXI_video_strm_V_keep_V_1_sel_rd;

    AXI_video_strm_V_keep_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_keep_V_1_vld_out <= AXI_video_strm_V_keep_V_1_state(0);
    AXI_video_strm_V_last_V_1_ack_in <= AXI_video_strm_V_last_V_1_state(1);
    AXI_video_strm_V_last_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_last_V_1_data_out_assign_proc : process(AXI_video_strm_V_last_V_1_payload_A, AXI_video_strm_V_last_V_1_payload_B, AXI_video_strm_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_sel)) then 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_B;
        else 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_load_A <= (AXI_video_strm_V_last_V_1_state_cmp_full and not(AXI_video_strm_V_last_V_1_sel_wr));
    AXI_video_strm_V_last_V_1_load_B <= (AXI_video_strm_V_last_V_1_sel_wr and AXI_video_strm_V_last_V_1_state_cmp_full);
    AXI_video_strm_V_last_V_1_sel <= AXI_video_strm_V_last_V_1_sel_rd;
    AXI_video_strm_V_last_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_last_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_vld_out <= AXI_video_strm_V_last_V_1_state(0);
    AXI_video_strm_V_strb_V_1_ack_in <= AXI_video_strm_V_strb_V_1_state(1);
    AXI_video_strm_V_strb_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_strb_V_1_data_out <= ap_const_lv3_0;
    AXI_video_strm_V_strb_V_1_sel <= AXI_video_strm_V_strb_V_1_sel_rd;

    AXI_video_strm_V_strb_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_strb_V_1_vld_out <= AXI_video_strm_V_strb_V_1_state(0);
    AXI_video_strm_V_user_V_1_ack_in <= AXI_video_strm_V_user_V_1_state(1);
    AXI_video_strm_V_user_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_user_V_1_data_out_assign_proc : process(AXI_video_strm_V_user_V_1_payload_A, AXI_video_strm_V_user_V_1_payload_B, AXI_video_strm_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_sel)) then 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_B;
        else 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_load_A <= (AXI_video_strm_V_user_V_1_state_cmp_full and not(AXI_video_strm_V_user_V_1_sel_wr));
    AXI_video_strm_V_user_V_1_load_B <= (AXI_video_strm_V_user_V_1_sel_wr and AXI_video_strm_V_user_V_1_state_cmp_full);
    AXI_video_strm_V_user_V_1_sel <= AXI_video_strm_V_user_V_1_sel_rd;
    AXI_video_strm_V_user_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_user_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_vld_out <= AXI_video_strm_V_user_V_1_state(0);

    StrmMPix_V_val_V_blk_n_assign_proc : process(StrmMPix_V_val_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, exitcond4_i_reg_260)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260))) then 
            StrmMPix_V_val_V_blk_n <= StrmMPix_V_val_V_empty_n;
        else 
            StrmMPix_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    StrmMPix_V_val_V_read_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond4_i_reg_260, ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1, ap_sig_529)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond4_i_reg_260) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_529 or ((ap_const_lv1_0 = exitcond4_i_reg_260) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond4_i_reg_260_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            StrmMPix_V_val_V_read <= ap_const_logic_1;
        else 
            StrmMPix_V_val_V_read <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond3_i_fu_179_p2, ap_sig_cseq_ST_st3_fsm_2, ap_sig_519)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_179_p2)) and not(ap_sig_519)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond3_i_fu_179_p2, ap_sig_cseq_ST_st3_fsm_2, ap_sig_519)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_179_p2)) and not(ap_sig_519))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_448_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_448 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_472_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_472 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_484_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_484 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_504_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_504 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_519_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, AXI_video_strm_V_keep_V_1_ack_in, AXI_video_strm_V_strb_V_1_ack_in, AXI_video_strm_V_user_V_1_ack_in, AXI_video_strm_V_last_V_1_ack_in, AXI_video_strm_V_id_V_1_ack_in, AXI_video_strm_V_dest_V_1_ack_in)
    begin
                ap_sig_519 <= ((AXI_video_strm_V_data_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_keep_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_user_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_last_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_id_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_sig_529_assign_proc : process(StrmMPix_V_val_V_empty_n, exitcond4_i_reg_260)
    begin
                ap_sig_529 <= ((ap_const_lv1_0 = exitcond4_i_reg_260) and (StrmMPix_V_val_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_3_assign_proc : process(ap_sig_448)
    begin
        if (ap_sig_448) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_484)
    begin
        if (ap_sig_484) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_504)
    begin
        if (ap_sig_504) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    axi_last_V_fu_205_p2 <= "1" when (j_cast_i_fu_190_p1 = tmp_31_i_reg_246) else "0";
    cols_cast_i_fu_169_p1 <= std_logic_vector(resize(unsigned(grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_return),12));
    exitcond3_i_fu_179_p2 <= "1" when (i_i_reg_130 = tmp_i_reg_236) else "0";
    exitcond4_i_fu_194_p2 <= "1" when (j_i_reg_141 = tmp_i_52_reg_241) else "0";
    grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start <= ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_152_ap_start;
    grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start <= ap_reg_grp_v_vscaler_reg_unsigned_short_s_fu_158_ap_start;
    i_fu_184_p2 <= std_logic_vector(unsigned(i_i_reg_130) + unsigned(ap_const_lv11_1));
    j_cast_i_fu_190_p1 <= std_logic_vector(resize(unsigned(j_i_reg_141),12));
    j_fu_199_p2 <= std_logic_vector(unsigned(j_i_reg_141) + unsigned(ap_const_lv11_1));
    tmp_31_i_fu_173_p2 <= std_logic_vector(unsigned(cols_cast_i_fu_169_p1) + unsigned(ap_const_lv12_FFF));
end behav;
