-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strmPix_V_val_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strmPix_V_val_0_V_empty_n : IN STD_LOGIC;
    strmPix_V_val_0_V_read : OUT STD_LOGIC;
    strmPix_V_val_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strmPix_V_val_1_V_empty_n : IN STD_LOGIC;
    strmPix_V_val_1_V_read : OUT STD_LOGIC;
    strmPix_V_val_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strmPix_V_val_2_V_empty_n : IN STD_LOGIC;
    strmPix_V_val_2_V_read : OUT STD_LOGIC;
    AXI_video_strm_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    AXI_video_strm_TVALID : OUT STD_LOGIC;
    AXI_video_strm_TREADY : IN STD_LOGIC;
    AXI_video_strm_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    AXI_video_strm_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    Height : IN STD_LOGIC_VECTOR (15 downto 0);
    WidthOut : IN STD_LOGIC_VECTOR (15 downto 0);
    colorFormat : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_pp0_stg0_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_24 : BOOLEAN;
    signal AXI_video_strm_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_keep_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_keep_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal AXI_video_strm_V_strb_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_strb_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_id_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_id_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_dest_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_dest_V_1_sel : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mapComp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mapComp_ce0 : STD_LOGIC;
    signal mapComp_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal strmPix_V_val_0_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_466 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond3_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal strmPix_V_val_1_V_blk_n : STD_LOGIC;
    signal strmPix_V_val_2_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond3_reg_587_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_236 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_492 : BOOLEAN;
    signal grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_502 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_504 : BOOLEAN;
    signal grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done : STD_LOGIC;
    signal tmp_126_fu_259_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_126_reg_507 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_279_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_fu_291_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_521 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_524 : BOOLEAN;
    signal exitcond1_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_311_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_129_reg_538 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_109_fu_314_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_109_reg_543 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_130_fu_319_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_130_reg_548 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_131_fu_323_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_131_reg_553 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_fu_327_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_reg_558 : STD_LOGIC_VECTOR (1 downto 0);
    signal map_2_V_1_fu_360_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_550 : BOOLEAN;
    signal map_2_V_3_fu_376_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_5_fu_384_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_563 : BOOLEAN;
    signal ap_sig_578 : BOOLEAN;
    signal i_2_fu_401_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_2_reg_582 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond3_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strmPix_V_val_0_V0_status : STD_LOGIC;
    signal ap_sig_589 : BOOLEAN;
    signal j_1_fu_416_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal axi_last_V_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_reg_596 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_476_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_247_ap_idle : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_253_ap_idle : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready : STD_LOGIC;
    signal grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal map_V_2_s_reg_177 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_V_1_s_reg_189 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_4_reg_201 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_reg_225 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start : STD_LOGIC := '0';
    signal tmp_28_cast_fu_306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal strmPix_V_val_0_V0_update : STD_LOGIC;
    signal tmp_user_V_fu_104 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_267_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_fu_271_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_127_fu_263_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_112_cast_fu_297_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_28_fu_301_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sel_tmp_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal map_0_V_cast_fu_336_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp2_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal map_2_V_fu_346_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal map_2_V_2_fu_368_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_cast_fu_392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_cast_fu_407_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_465_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_454_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_443_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component QuadSLAM_BD_v_tpg_0_1_v_tpg_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo_mapComp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    mapComp_U : component QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo_mapComp
    generic map (
        DataWidth => 2,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mapComp_address0,
        ce0 => mapComp_ce0,
        q0 => mapComp_q0);

    grp_v_tpg_reg_unsigned_short_s_fu_247 : component QuadSLAM_BD_v_tpg_0_1_v_tpg_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start,
        ap_done => grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done,
        ap_idle => grp_v_tpg_reg_unsigned_short_s_fu_247_ap_idle,
        ap_ready => grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready,
        in_r => Height,
        ap_return => grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return);

    grp_v_tpg_reg_unsigned_short_s_fu_253 : component QuadSLAM_BD_v_tpg_0_1_v_tpg_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start,
        ap_done => grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done,
        ap_idle => grp_v_tpg_reg_unsigned_short_s_fu_253_ap_idle,
        ap_ready => grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready,
        in_r => WidthOut,
        ap_return => grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return);

    v_tpg_mux_3to1_sel2_8_1_U137 : component QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => strmPix_V_val_0_V_dout,
        din2 => strmPix_V_val_1_V_dout,
        din3 => strmPix_V_val_2_V_dout,
        din4 => tmp_130_reg_548,
        dout => tmp_19_fu_443_p5);

    v_tpg_mux_3to1_sel2_8_1_U138 : component QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => strmPix_V_val_0_V_dout,
        din2 => strmPix_V_val_1_V_dout,
        din3 => strmPix_V_val_2_V_dout,
        din4 => tmp_131_reg_553,
        dout => tmp_20_fu_454_p5);

    v_tpg_mux_3to1_sel2_8_1_U139 : component QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => strmPix_V_val_0_V_dout,
        din2 => strmPix_V_val_1_V_dout,
        din3 => strmPix_V_val_2_V_dout,
        din4 => tmp_132_reg_558,
        dout => tmp_21_fu_465_p5);





    AXI_video_strm_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_out))) then 
                                        AXI_video_strm_V_data_V_1_sel_rd <= not(AXI_video_strm_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_in))) then 
                                        AXI_video_strm_V_data_V_1_sel_wr <= not(AXI_video_strm_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out) and (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1)) or ((AXI_video_strm_V_data_V_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out)))))) then 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_out))) then 
                                        AXI_video_strm_V_dest_V_1_sel_rd <= not(AXI_video_strm_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_dest_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out)))))) then 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_out))) then 
                                        AXI_video_strm_V_id_V_1_sel_rd <= not(AXI_video_strm_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_id_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_id_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_id_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out)))))) then 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_out))) then 
                                        AXI_video_strm_V_keep_V_1_sel_rd <= not(AXI_video_strm_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_keep_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_keep_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_keep_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out)))))) then 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_out))) then 
                                        AXI_video_strm_V_last_V_1_sel_rd <= not(AXI_video_strm_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_in))) then 
                                        AXI_video_strm_V_last_V_1_sel_wr <= not(AXI_video_strm_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_last_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out)))))) then 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_out))) then 
                                        AXI_video_strm_V_strb_V_1_sel_rd <= not(AXI_video_strm_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_strb_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_strb_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_strb_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out)))))) then 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_out))) then 
                                        AXI_video_strm_V_user_V_1_sel_rd <= not(AXI_video_strm_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_in))) then 
                                        AXI_video_strm_V_user_V_1_sel_wr <= not(AXI_video_strm_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_lv2_2 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out) and (ap_const_lv2_1 = AXI_video_strm_V_user_V_1_state)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_1_state) and not(((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_0 = AXI_video_strm_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out)))))) then 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_396_p2)) and not(ap_sig_578))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_492))) then 
                    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready)) then 
                    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_492))) then 
                    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready)) then 
                    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond3_fu_411_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_396_p2) and not(ap_sig_578))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond3_fu_411_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_396_p2) and not(ap_sig_578)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond3_fu_411_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_396_p2) and not(ap_sig_578))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond3_fu_411_p2)))) then 
                i1_reg_225 <= i_2_reg_582;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_285_p2)))) then 
                i1_reg_225 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_reg_213 <= i_1_reg_521;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) or (ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done))))) then 
                i_reg_213 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_396_p2) and not(ap_sig_578))) then 
                j_reg_236 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond3_fu_411_p2))) then 
                j_reg_236 <= j_1_fu_416_p2;
            end if; 
        end if;
    end process;

    tmp_user_V_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
                tmp_user_V_fu_104 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_285_p2)))) then 
                tmp_user_V_fu_104 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_A)) then
                AXI_video_strm_V_data_V_1_payload_A <= tmp_data_V_fu_476_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_load_B)) then
                AXI_video_strm_V_data_V_1_payload_B <= tmp_data_V_fu_476_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_A)) then
                AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_596;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_load_B)) then
                AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_596;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_A)) then
                AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_load_B)) then
                AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then
                ap_reg_ppstg_exitcond3_reg_587_pp0_iter1 <= exitcond3_reg_587;
                exitcond3_reg_587 <= exitcond3_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond3_fu_411_p2))) then
                axi_last_V_reg_596 <= axi_last_V_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_1_reg_521 <= i_1_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_578))) then
                i_2_reg_582 <= i_2_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                map_2_V_4_reg_201 <= map_2_V_5_fu_384_p3;
                map_V_1_s_reg_189 <= map_2_V_3_fu_376_p3;
                map_V_2_s_reg_177 <= map_2_V_1_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_285_p2)))) then
                tmp_109_reg_543 <= tmp_109_fu_314_p2;
                tmp_129_reg_538 <= tmp_129_fu_311_p1;
                tmp_130_reg_548 <= tmp_130_fu_319_p1;
                tmp_131_reg_553 <= tmp_131_fu_323_p1;
                tmp_132_reg_558 <= tmp_132_fu_327_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) or (ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done))))) then
                tmp_126_reg_507 <= tmp_126_fu_259_p1;
                tmp_reg_502 <= grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_1_ack_in, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_492, grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done, grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done, exitcond1_fu_285_p2, exitcond2_fu_396_p2, ap_sig_578, exitcond3_fu_411_p2, ap_sig_589)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_492)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) or (ap_const_logic_0 = grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_285_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st5_fsm_4 => 
                if ((not((ap_const_lv1_0 = exitcond2_fu_396_p2)) and not(ap_sig_578))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond2_fu_396_p2) and not(ap_sig_578))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_pp0_stg0_fsm_5 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond3_fu_411_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond3_fu_411_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    AXI_video_strm_TDATA <= AXI_video_strm_V_data_V_1_data_out;

    AXI_video_strm_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_1_state, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1)))) then 
            AXI_video_strm_TDATA_blk_n <= AXI_video_strm_V_data_V_1_state(1);
        else 
            AXI_video_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_TDEST <= AXI_video_strm_V_dest_V_1_data_out;
    AXI_video_strm_TID <= AXI_video_strm_V_id_V_1_data_out;
    AXI_video_strm_TKEEP <= AXI_video_strm_V_keep_V_1_data_out;
    AXI_video_strm_TLAST <= AXI_video_strm_V_last_V_1_data_out;
    AXI_video_strm_TSTRB <= AXI_video_strm_V_strb_V_1_data_out;
    AXI_video_strm_TUSER <= AXI_video_strm_V_user_V_1_data_out;
    AXI_video_strm_TVALID <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_data_V_1_ack_in <= AXI_video_strm_V_data_V_1_state(1);
    AXI_video_strm_V_data_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_data_V_1_data_out_assign_proc : process(AXI_video_strm_V_data_V_1_payload_A, AXI_video_strm_V_data_V_1_payload_B, AXI_video_strm_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_sel)) then 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_B;
        else 
            AXI_video_strm_V_data_V_1_data_out <= AXI_video_strm_V_data_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_load_A <= (AXI_video_strm_V_data_V_1_state_cmp_full and not(AXI_video_strm_V_data_V_1_sel_wr));
    AXI_video_strm_V_data_V_1_load_B <= (AXI_video_strm_V_data_V_1_sel_wr and AXI_video_strm_V_data_V_1_state_cmp_full);
    AXI_video_strm_V_data_V_1_sel <= AXI_video_strm_V_data_V_1_sel_rd;
    AXI_video_strm_V_data_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_data_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_data_V_1_vld_out <= AXI_video_strm_V_data_V_1_state(0);
    AXI_video_strm_V_dest_V_1_ack_in <= AXI_video_strm_V_dest_V_1_state(1);
    AXI_video_strm_V_dest_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_dest_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_dest_V_1_sel <= AXI_video_strm_V_dest_V_1_sel_rd;

    AXI_video_strm_V_dest_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_1_vld_out <= AXI_video_strm_V_dest_V_1_state(0);
    AXI_video_strm_V_id_V_1_ack_in <= AXI_video_strm_V_id_V_1_state(1);
    AXI_video_strm_V_id_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_id_V_1_data_out <= ap_const_lv1_0;
    AXI_video_strm_V_id_V_1_sel <= AXI_video_strm_V_id_V_1_sel_rd;

    AXI_video_strm_V_id_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_id_V_1_vld_out <= AXI_video_strm_V_id_V_1_state(0);
    AXI_video_strm_V_keep_V_1_ack_in <= AXI_video_strm_V_keep_V_1_state(1);
    AXI_video_strm_V_keep_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_keep_V_1_data_out <= ap_const_lv3_7;
    AXI_video_strm_V_keep_V_1_sel <= AXI_video_strm_V_keep_V_1_sel_rd;

    AXI_video_strm_V_keep_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_keep_V_1_vld_out <= AXI_video_strm_V_keep_V_1_state(0);
    AXI_video_strm_V_last_V_1_ack_in <= AXI_video_strm_V_last_V_1_state(1);
    AXI_video_strm_V_last_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_last_V_1_data_out_assign_proc : process(AXI_video_strm_V_last_V_1_payload_A, AXI_video_strm_V_last_V_1_payload_B, AXI_video_strm_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_sel)) then 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_B;
        else 
            AXI_video_strm_V_last_V_1_data_out <= AXI_video_strm_V_last_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_load_A <= (AXI_video_strm_V_last_V_1_state_cmp_full and not(AXI_video_strm_V_last_V_1_sel_wr));
    AXI_video_strm_V_last_V_1_load_B <= (AXI_video_strm_V_last_V_1_sel_wr and AXI_video_strm_V_last_V_1_state_cmp_full);
    AXI_video_strm_V_last_V_1_sel <= AXI_video_strm_V_last_V_1_sel_rd;
    AXI_video_strm_V_last_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_last_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_vld_out <= AXI_video_strm_V_last_V_1_state(0);
    AXI_video_strm_V_strb_V_1_ack_in <= AXI_video_strm_V_strb_V_1_state(1);
    AXI_video_strm_V_strb_V_1_ack_out <= AXI_video_strm_TREADY;
    AXI_video_strm_V_strb_V_1_data_out <= ap_const_lv3_0;
    AXI_video_strm_V_strb_V_1_sel <= AXI_video_strm_V_strb_V_1_sel_rd;

    AXI_video_strm_V_strb_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_strb_V_1_vld_out <= AXI_video_strm_V_strb_V_1_state(0);
    AXI_video_strm_V_user_V_1_ack_in <= AXI_video_strm_V_user_V_1_state(1);
    AXI_video_strm_V_user_V_1_ack_out <= AXI_video_strm_TREADY;

    AXI_video_strm_V_user_V_1_data_out_assign_proc : process(AXI_video_strm_V_user_V_1_payload_A, AXI_video_strm_V_user_V_1_payload_B, AXI_video_strm_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_sel)) then 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_B;
        else 
            AXI_video_strm_V_user_V_1_data_out <= AXI_video_strm_V_user_V_1_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_load_A <= (AXI_video_strm_V_user_V_1_state_cmp_full and not(AXI_video_strm_V_user_V_1_sel_wr));
    AXI_video_strm_V_user_V_1_load_B <= (AXI_video_strm_V_user_V_1_sel_wr and AXI_video_strm_V_user_V_1_state_cmp_full);
    AXI_video_strm_V_user_V_1_sel <= AXI_video_strm_V_user_V_1_sel_rd;
    AXI_video_strm_V_user_V_1_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_1_state = ap_const_lv2_1) else '1';

    AXI_video_strm_V_user_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_vld_out <= AXI_video_strm_V_user_V_1_state(0);

    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_396_p2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_578)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_396_p2)) and not(ap_sig_578)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond2_fu_396_p2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_578)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_396_p2)) and not(ap_sig_578))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_466_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_466 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_492_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_492 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_504_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_504 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_524_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_524 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_550_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_550 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_563_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_563 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_578_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, AXI_video_strm_V_keep_V_1_ack_in, AXI_video_strm_V_strb_V_1_ack_in, AXI_video_strm_V_user_V_1_ack_in, AXI_video_strm_V_last_V_1_ack_in, AXI_video_strm_V_id_V_1_ack_in, AXI_video_strm_V_dest_V_1_ack_in)
    begin
                ap_sig_578 <= ((AXI_video_strm_V_data_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_keep_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_user_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_last_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_id_V_1_ack_in = ap_const_logic_0) or (AXI_video_strm_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_sig_589_assign_proc : process(exitcond3_reg_587, strmPix_V_val_0_V0_status)
    begin
                ap_sig_589 <= ((ap_const_lv1_0 = exitcond3_reg_587) and (strmPix_V_val_0_V0_status = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_5_assign_proc : process(ap_sig_466)
    begin
        if (ap_sig_466) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_24)
    begin
        if (ap_sig_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_504)
    begin
        if (ap_sig_504) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_524)
    begin
        if (ap_sig_524) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_550)
    begin
        if (ap_sig_550) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_563)
    begin
        if (ap_sig_563) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;

    axi_last_V_fu_422_p2 <= "1" when (j_cast_fu_407_p1 = tmp_109_reg_543) else "0";
    exitcond1_fu_285_p2 <= "1" when (i_reg_213 = ap_const_lv2_3) else "0";
    exitcond2_fu_396_p2 <= "1" when (i1_cast_fu_392_p1 = tmp_129_reg_538) else "0";
    exitcond3_fu_411_p2 <= "1" when (j_cast_fu_407_p1 = tmp_126_reg_507) else "0";
    grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start;
    grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start;
    i1_cast_fu_392_p1 <= std_logic_vector(resize(unsigned(i1_reg_225),12));
    i_1_fu_291_p2 <= std_logic_vector(unsigned(i_reg_213) + unsigned(ap_const_lv2_1));
    i_2_fu_401_p2 <= std_logic_vector(unsigned(i1_reg_225) + unsigned(ap_const_lv11_1));
    j_1_fu_416_p2 <= std_logic_vector(unsigned(j_reg_236) + unsigned(ap_const_lv11_1));
    j_cast_fu_407_p1 <= std_logic_vector(resize(unsigned(j_reg_236),12));
    mapComp_address0 <= tmp_28_cast_fu_306_p1(4 - 1 downto 0);

    mapComp_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mapComp_ce0 <= ap_const_logic_1;
        else 
            mapComp_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    map_0_V_cast_fu_336_p1 <= std_logic_vector(resize(unsigned(mapComp_q0),4));
    map_2_V_1_fu_360_p3 <= 
        map_V_2_s_reg_177 when (sel_tmp2_fu_354_p2(0) = '1') else 
        map_2_V_fu_346_p3;
    map_2_V_2_fu_368_p3 <= 
        map_0_V_cast_fu_336_p1 when (sel_tmp_fu_340_p2(0) = '1') else 
        map_V_1_s_reg_189;
    map_2_V_3_fu_376_p3 <= 
        map_V_1_s_reg_189 when (sel_tmp2_fu_354_p2(0) = '1') else 
        map_2_V_2_fu_368_p3;
    map_2_V_5_fu_384_p3 <= 
        map_0_V_cast_fu_336_p1 when (sel_tmp2_fu_354_p2(0) = '1') else 
        map_2_V_4_reg_201;
    map_2_V_fu_346_p3 <= 
        map_V_2_s_reg_177 when (sel_tmp_fu_340_p2(0) = '1') else 
        map_0_V_cast_fu_336_p1;
    p_shl_cast_fu_271_p3 <= (tmp_128_fu_267_p1 & ap_const_lv2_0);
    sel_tmp2_fu_354_p2 <= "1" when (i_reg_213 = ap_const_lv2_0) else "0";
    sel_tmp_fu_340_p2 <= "1" when (i_reg_213 = ap_const_lv2_1) else "0";
    strmPix_V_val_0_V0_status <= (strmPix_V_val_0_V_empty_n and strmPix_V_val_1_V_empty_n and strmPix_V_val_2_V_empty_n);

    strmPix_V_val_0_V0_update_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond3_reg_587, ap_reg_ppstg_exitcond3_reg_587_pp0_iter1, ap_sig_589)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_589 or ((ap_const_lv1_0 = exitcond3_reg_587) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            strmPix_V_val_0_V0_update <= ap_const_logic_1;
        else 
            strmPix_V_val_0_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    strmPix_V_val_0_V_blk_n_assign_proc : process(strmPix_V_val_0_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, exitcond3_reg_587)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587))) then 
            strmPix_V_val_0_V_blk_n <= strmPix_V_val_0_V_empty_n;
        else 
            strmPix_V_val_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strmPix_V_val_0_V_read <= strmPix_V_val_0_V0_update;

    strmPix_V_val_1_V_blk_n_assign_proc : process(strmPix_V_val_1_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, exitcond3_reg_587)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587))) then 
            strmPix_V_val_1_V_blk_n <= strmPix_V_val_1_V_empty_n;
        else 
            strmPix_V_val_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strmPix_V_val_1_V_read <= strmPix_V_val_0_V0_update;

    strmPix_V_val_2_V_blk_n_assign_proc : process(strmPix_V_val_2_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_reg_ppiten_pp0_it1, exitcond3_reg_587)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond3_reg_587))) then 
            strmPix_V_val_2_V_blk_n <= strmPix_V_val_2_V_empty_n;
        else 
            strmPix_V_val_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strmPix_V_val_2_V_read <= strmPix_V_val_0_V0_update;
    tmp_109_fu_314_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(tmp_126_reg_507));
    tmp_112_cast_fu_297_p1 <= std_logic_vector(resize(unsigned(i_reg_213),5));
    tmp_126_fu_259_p1 <= grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return(12 - 1 downto 0);
    tmp_127_fu_263_p1 <= colorFormat(5 - 1 downto 0);
    tmp_128_fu_267_p1 <= colorFormat(3 - 1 downto 0);
    tmp_129_fu_311_p1 <= tmp_reg_502(12 - 1 downto 0);
    tmp_130_fu_319_p1 <= map_2_V_4_reg_201(2 - 1 downto 0);
    tmp_131_fu_323_p1 <= map_V_1_s_reg_189(2 - 1 downto 0);
    tmp_132_fu_327_p1 <= map_V_2_s_reg_177(2 - 1 downto 0);
    tmp_27_fu_279_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_271_p3) - unsigned(tmp_127_fu_263_p1));
        tmp_28_cast_fu_306_p1 <= std_logic_vector(resize(signed(tmp_28_fu_301_p2),64));

    tmp_28_fu_301_p2 <= std_logic_vector(unsigned(tmp_27_fu_279_p2) + unsigned(tmp_112_cast_fu_297_p1));
    tmp_data_V_fu_476_p4 <= ((tmp_21_fu_465_p5 & tmp_20_fu_454_p5) & tmp_19_fu_443_p5);
end behav;
