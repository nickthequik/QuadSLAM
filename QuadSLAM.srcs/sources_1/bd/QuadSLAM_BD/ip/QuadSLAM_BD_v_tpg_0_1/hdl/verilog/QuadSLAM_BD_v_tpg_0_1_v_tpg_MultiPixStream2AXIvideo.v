// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        strmPix_V_val_0_V_dout,
        strmPix_V_val_0_V_empty_n,
        strmPix_V_val_0_V_read,
        strmPix_V_val_1_V_dout,
        strmPix_V_val_1_V_empty_n,
        strmPix_V_val_1_V_read,
        strmPix_V_val_2_V_dout,
        strmPix_V_val_2_V_empty_n,
        strmPix_V_val_2_V_read,
        AXI_video_strm_TDATA,
        AXI_video_strm_TVALID,
        AXI_video_strm_TREADY,
        AXI_video_strm_TKEEP,
        AXI_video_strm_TSTRB,
        AXI_video_strm_TUSER,
        AXI_video_strm_TLAST,
        AXI_video_strm_TID,
        AXI_video_strm_TDEST,
        Height,
        WidthOut,
        colorFormat
);

parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_pp0_stg0_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_FFF = 12'b111111111111;
parameter    ap_const_lv11_1 = 11'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] strmPix_V_val_0_V_dout;
input   strmPix_V_val_0_V_empty_n;
output   strmPix_V_val_0_V_read;
input  [7:0] strmPix_V_val_1_V_dout;
input   strmPix_V_val_1_V_empty_n;
output   strmPix_V_val_1_V_read;
input  [7:0] strmPix_V_val_2_V_dout;
input   strmPix_V_val_2_V_empty_n;
output   strmPix_V_val_2_V_read;
output  [23:0] AXI_video_strm_TDATA;
output   AXI_video_strm_TVALID;
input   AXI_video_strm_TREADY;
output  [2:0] AXI_video_strm_TKEEP;
output  [2:0] AXI_video_strm_TSTRB;
output  [0:0] AXI_video_strm_TUSER;
output  [0:0] AXI_video_strm_TLAST;
output  [0:0] AXI_video_strm_TID;
output  [0:0] AXI_video_strm_TDEST;
input  [15:0] Height;
input  [15:0] WidthOut;
input  [7:0] colorFormat;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_24;
reg   [23:0] AXI_video_strm_V_data_V_1_data_out;
reg    AXI_video_strm_V_data_V_1_vld_in;
wire    AXI_video_strm_V_data_V_1_vld_out;
wire    AXI_video_strm_V_data_V_1_ack_in;
wire    AXI_video_strm_V_data_V_1_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_A;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_B;
reg    AXI_video_strm_V_data_V_1_sel_rd;
reg    AXI_video_strm_V_data_V_1_sel_wr;
wire    AXI_video_strm_V_data_V_1_sel;
wire    AXI_video_strm_V_data_V_1_load_A;
wire    AXI_video_strm_V_data_V_1_load_B;
reg   [1:0] AXI_video_strm_V_data_V_1_state;
wire    AXI_video_strm_V_data_V_1_state_cmp_full;
wire   [2:0] AXI_video_strm_V_keep_V_1_data_out;
reg    AXI_video_strm_V_keep_V_1_vld_in;
wire    AXI_video_strm_V_keep_V_1_vld_out;
wire    AXI_video_strm_V_keep_V_1_ack_in;
wire    AXI_video_strm_V_keep_V_1_ack_out;
reg    AXI_video_strm_V_keep_V_1_sel_rd;
wire    AXI_video_strm_V_keep_V_1_sel;
reg   [1:0] AXI_video_strm_V_keep_V_1_state;
wire   [2:0] AXI_video_strm_V_strb_V_1_data_out;
reg    AXI_video_strm_V_strb_V_1_vld_in;
wire    AXI_video_strm_V_strb_V_1_vld_out;
wire    AXI_video_strm_V_strb_V_1_ack_in;
wire    AXI_video_strm_V_strb_V_1_ack_out;
reg    AXI_video_strm_V_strb_V_1_sel_rd;
wire    AXI_video_strm_V_strb_V_1_sel;
reg   [1:0] AXI_video_strm_V_strb_V_1_state;
reg   [0:0] AXI_video_strm_V_user_V_1_data_out;
reg    AXI_video_strm_V_user_V_1_vld_in;
wire    AXI_video_strm_V_user_V_1_vld_out;
wire    AXI_video_strm_V_user_V_1_ack_in;
wire    AXI_video_strm_V_user_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_B;
reg    AXI_video_strm_V_user_V_1_sel_rd;
reg    AXI_video_strm_V_user_V_1_sel_wr;
wire    AXI_video_strm_V_user_V_1_sel;
wire    AXI_video_strm_V_user_V_1_load_A;
wire    AXI_video_strm_V_user_V_1_load_B;
reg   [1:0] AXI_video_strm_V_user_V_1_state;
wire    AXI_video_strm_V_user_V_1_state_cmp_full;
reg   [0:0] AXI_video_strm_V_last_V_1_data_out;
reg    AXI_video_strm_V_last_V_1_vld_in;
wire    AXI_video_strm_V_last_V_1_vld_out;
wire    AXI_video_strm_V_last_V_1_ack_in;
wire    AXI_video_strm_V_last_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_B;
reg    AXI_video_strm_V_last_V_1_sel_rd;
reg    AXI_video_strm_V_last_V_1_sel_wr;
wire    AXI_video_strm_V_last_V_1_sel;
wire    AXI_video_strm_V_last_V_1_load_A;
wire    AXI_video_strm_V_last_V_1_load_B;
reg   [1:0] AXI_video_strm_V_last_V_1_state;
wire    AXI_video_strm_V_last_V_1_state_cmp_full;
wire   [0:0] AXI_video_strm_V_id_V_1_data_out;
reg    AXI_video_strm_V_id_V_1_vld_in;
wire    AXI_video_strm_V_id_V_1_vld_out;
wire    AXI_video_strm_V_id_V_1_ack_in;
wire    AXI_video_strm_V_id_V_1_ack_out;
reg    AXI_video_strm_V_id_V_1_sel_rd;
wire    AXI_video_strm_V_id_V_1_sel;
reg   [1:0] AXI_video_strm_V_id_V_1_state;
wire   [0:0] AXI_video_strm_V_dest_V_1_data_out;
reg    AXI_video_strm_V_dest_V_1_vld_in;
wire    AXI_video_strm_V_dest_V_1_vld_out;
wire    AXI_video_strm_V_dest_V_1_ack_in;
wire    AXI_video_strm_V_dest_V_1_ack_out;
reg    AXI_video_strm_V_dest_V_1_sel_rd;
wire    AXI_video_strm_V_dest_V_1_sel;
reg   [1:0] AXI_video_strm_V_dest_V_1_state;
wire   [3:0] mapComp_address0;
reg    mapComp_ce0;
wire   [1:0] mapComp_q0;
reg    strmPix_V_val_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_5;
reg    ap_sig_466;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] exitcond3_reg_587;
reg    strmPix_V_val_1_V_blk_n;
reg    strmPix_V_val_2_V_blk_n;
reg    AXI_video_strm_TDATA_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_587_pp0_iter1;
reg   [10:0] j_reg_236;
reg    ap_sig_492;
wire   [15:0] grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return;
reg   [15:0] tmp_reg_502;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_504;
wire    grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done;
wire    grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done;
wire   [11:0] tmp_126_fu_259_p1;
reg   [11:0] tmp_126_reg_507;
wire   [4:0] tmp_27_fu_279_p2;
wire   [1:0] i_1_fu_291_p2;
reg   [1:0] i_1_reg_521;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_524;
wire   [0:0] exitcond1_fu_285_p2;
wire   [11:0] tmp_129_fu_311_p1;
reg   [11:0] tmp_129_reg_538;
wire   [11:0] tmp_109_fu_314_p2;
reg   [11:0] tmp_109_reg_543;
wire   [1:0] tmp_130_fu_319_p1;
reg   [1:0] tmp_130_reg_548;
wire   [1:0] tmp_131_fu_323_p1;
reg   [1:0] tmp_131_reg_553;
wire   [1:0] tmp_132_fu_327_p1;
reg   [1:0] tmp_132_reg_558;
wire   [3:0] map_2_V_1_fu_360_p3;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_550;
wire   [3:0] map_2_V_3_fu_376_p3;
wire   [3:0] map_2_V_5_fu_384_p3;
wire   [0:0] exitcond2_fu_396_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_563;
reg    ap_sig_578;
wire   [10:0] i_2_fu_401_p2;
reg   [10:0] i_2_reg_582;
wire   [0:0] exitcond3_fu_411_p2;
wire    strmPix_V_val_0_V0_status;
reg    ap_sig_589;
wire   [10:0] j_1_fu_416_p2;
wire   [0:0] axi_last_V_fu_422_p2;
reg   [0:0] axi_last_V_reg_596;
wire   [23:0] tmp_data_V_fu_476_p4;
wire    grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start;
wire    grp_v_tpg_reg_unsigned_short_s_fu_247_ap_idle;
wire    grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready;
wire    grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start;
wire    grp_v_tpg_reg_unsigned_short_s_fu_253_ap_idle;
wire    grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready;
wire   [15:0] grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return;
reg   [3:0] map_V_2_s_reg_177;
reg   [3:0] map_V_1_s_reg_189;
reg   [3:0] map_2_V_4_reg_201;
reg   [1:0] i_reg_213;
reg   [10:0] i1_reg_225;
reg    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start;
reg    ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start;
wire  signed [63:0] tmp_28_cast_fu_306_p1;
reg    strmPix_V_val_0_V0_update;
reg   [0:0] tmp_user_V_fu_104;
wire   [2:0] tmp_128_fu_267_p1;
wire   [4:0] p_shl_cast_fu_271_p3;
wire   [4:0] tmp_127_fu_263_p1;
wire   [4:0] tmp_112_cast_fu_297_p1;
wire   [4:0] tmp_28_fu_301_p2;
wire   [0:0] sel_tmp_fu_340_p2;
wire   [3:0] map_0_V_cast_fu_336_p1;
wire   [0:0] sel_tmp2_fu_354_p2;
wire   [3:0] map_2_V_fu_346_p3;
wire   [3:0] map_2_V_2_fu_368_p3;
wire   [11:0] i1_cast_fu_392_p1;
wire   [11:0] j_cast_fu_407_p1;
wire   [7:0] tmp_21_fu_465_p5;
wire   [7:0] tmp_20_fu_454_p5;
wire   [7:0] tmp_19_fu_443_p5;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'b1;
#0 AXI_video_strm_V_data_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_data_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_data_V_1_state = 2'b00;
#0 AXI_video_strm_V_keep_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_keep_V_1_state = 2'b00;
#0 AXI_video_strm_V_strb_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_strb_V_1_state = 2'b00;
#0 AXI_video_strm_V_user_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_user_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_user_V_1_state = 2'b00;
#0 AXI_video_strm_V_last_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_last_V_1_sel_wr = 1'b0;
#0 AXI_video_strm_V_last_V_1_state = 2'b00;
#0 AXI_video_strm_V_id_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_id_V_1_state = 2'b00;
#0 AXI_video_strm_V_dest_V_1_sel_rd = 1'b0;
#0 AXI_video_strm_V_dest_V_1_state = 2'b00;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start = 1'b0;
#0 ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start = 1'b0;
end

QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo_mapComp #(
    .DataWidth( 2 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
mapComp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mapComp_address0),
    .ce0(mapComp_ce0),
    .q0(mapComp_q0)
);

QuadSLAM_BD_v_tpg_0_1_v_tpg_reg_unsigned_short_s grp_v_tpg_reg_unsigned_short_s_fu_247(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start),
    .ap_done(grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done),
    .ap_idle(grp_v_tpg_reg_unsigned_short_s_fu_247_ap_idle),
    .ap_ready(grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready),
    .in_r(Height),
    .ap_return(grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return)
);

QuadSLAM_BD_v_tpg_0_1_v_tpg_reg_unsigned_short_s grp_v_tpg_reg_unsigned_short_s_fu_253(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start),
    .ap_done(grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done),
    .ap_idle(grp_v_tpg_reg_unsigned_short_s_fu_253_ap_idle),
    .ap_ready(grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready),
    .in_r(WidthOut),
    .ap_return(grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return)
);

QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_tpg_mux_3to1_sel2_8_1_U137(
    .din1(strmPix_V_val_0_V_dout),
    .din2(strmPix_V_val_1_V_dout),
    .din3(strmPix_V_val_2_V_dout),
    .din4(tmp_130_reg_548),
    .dout(tmp_19_fu_443_p5)
);

QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_tpg_mux_3to1_sel2_8_1_U138(
    .din1(strmPix_V_val_0_V_dout),
    .din2(strmPix_V_val_1_V_dout),
    .din3(strmPix_V_val_2_V_dout),
    .din4(tmp_131_reg_553),
    .dout(tmp_20_fu_454_p5)
);

QuadSLAM_BD_v_tpg_0_1_v_tpg_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_tpg_mux_3to1_sel2_8_1_U139(
    .din1(strmPix_V_val_0_V_dout),
    .din2(strmPix_V_val_1_V_dout),
    .din3(strmPix_V_val_2_V_dout),
    .din4(tmp_132_reg_558),
    .dout(tmp_21_fu_465_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (1'b1 == AXI_video_strm_V_data_V_1_vld_out))) begin
            AXI_video_strm_V_data_V_1_sel_rd <= ~AXI_video_strm_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_in))) begin
            AXI_video_strm_V_data_V_1_sel_wr <= ~AXI_video_strm_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((1'b0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)) | ((1'b1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)) | ((AXI_video_strm_V_data_V_1_state == ap_const_lv2_3) & ~((1'b1 == AXI_video_strm_V_data_V_1_vld_in) & (1'b0 == AXI_video_strm_V_data_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_data_V_1_vld_in) & (1'b1 == AXI_video_strm_V_data_V_1_ack_out))))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (1'b1 == AXI_video_strm_V_dest_V_1_vld_out))) begin
            AXI_video_strm_V_dest_V_1_sel_rd <= ~AXI_video_strm_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((1'b0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)) | ((1'b1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state) & ~((1'b1 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_dest_V_1_vld_in) & (1'b1 == AXI_video_strm_V_dest_V_1_ack_out))))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (1'b1 == AXI_video_strm_V_id_V_1_vld_out))) begin
            AXI_video_strm_V_id_V_1_sel_rd <= ~AXI_video_strm_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((1'b0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)) | ((1'b1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state) & ~((1'b1 == AXI_video_strm_V_id_V_1_vld_in) & (1'b0 == AXI_video_strm_V_id_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_id_V_1_vld_in) & (1'b1 == AXI_video_strm_V_id_V_1_ack_out))))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (1'b1 == AXI_video_strm_V_keep_V_1_vld_out))) begin
            AXI_video_strm_V_keep_V_1_sel_rd <= ~AXI_video_strm_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((1'b0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)) | ((1'b1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state) & ~((1'b1 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_keep_V_1_vld_in) & (1'b1 == AXI_video_strm_V_keep_V_1_ack_out))))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (1'b1 == AXI_video_strm_V_last_V_1_vld_out))) begin
            AXI_video_strm_V_last_V_1_sel_rd <= ~AXI_video_strm_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_in))) begin
            AXI_video_strm_V_last_V_1_sel_wr <= ~AXI_video_strm_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((1'b0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)) | ((1'b1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state) & ~((1'b1 == AXI_video_strm_V_last_V_1_vld_in) & (1'b0 == AXI_video_strm_V_last_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_last_V_1_vld_in) & (1'b1 == AXI_video_strm_V_last_V_1_ack_out))))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (1'b1 == AXI_video_strm_V_strb_V_1_vld_out))) begin
            AXI_video_strm_V_strb_V_1_sel_rd <= ~AXI_video_strm_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((1'b0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)) | ((1'b1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state) & ~((1'b1 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_strb_V_1_vld_in) & (1'b1 == AXI_video_strm_V_strb_V_1_ack_out))))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (1'b1 == AXI_video_strm_V_user_V_1_vld_out))) begin
            AXI_video_strm_V_user_V_1_sel_rd <= ~AXI_video_strm_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_in))) begin
            AXI_video_strm_V_user_V_1_sel_wr <= ~AXI_video_strm_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((1'b0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)) | ((1'b1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state) & ~((1'b1 == AXI_video_strm_V_user_V_1_vld_in) & (1'b0 == AXI_video_strm_V_user_V_1_ack_out)) & ~((1'b0 == AXI_video_strm_V_user_V_1_vld_in) & (1'b1 == AXI_video_strm_V_user_V_1_ack_out))))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_492)) begin
            ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_tpg_reg_unsigned_short_s_fu_247_ap_ready)) begin
            ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_492)) begin
            ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= 1'b1;
        end else if ((1'b1 == grp_v_tpg_reg_unsigned_short_s_fu_253_ap_ready)) begin
            ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond3_fu_411_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond3_fu_411_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond3_fu_411_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond3_fu_411_p2))) begin
        i1_reg_225 <= i_2_reg_582;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond1_fu_285_p2))) begin
        i1_reg_225 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_reg_213 <= i_1_reg_521;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~((1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) | (1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done)))) begin
        i_reg_213 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
        j_reg_236 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond3_fu_411_p2))) begin
        j_reg_236 <= j_1_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        tmp_user_V_fu_104 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond1_fu_285_p2))) begin
        tmp_user_V_fu_104 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_A)) begin
        AXI_video_strm_V_data_V_1_payload_A <= tmp_data_V_fu_476_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_load_B)) begin
        AXI_video_strm_V_data_V_1_payload_B <= tmp_data_V_fu_476_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_A)) begin
        AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_load_B)) begin
        AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_A)) begin
        AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_load_B)) begin
        AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        ap_reg_ppstg_exitcond3_reg_587_pp0_iter1 <= exitcond3_reg_587;
        exitcond3_reg_587 <= exitcond3_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & (1'b0 == exitcond3_fu_411_p2))) begin
        axi_last_V_reg_596 <= axi_last_V_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_1_reg_521 <= i_1_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_578)) begin
        i_2_reg_582 <= i_2_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        map_2_V_4_reg_201 <= map_2_V_5_fu_384_p3;
        map_V_1_s_reg_189 <= map_2_V_3_fu_376_p3;
        map_V_2_s_reg_177 <= map_2_V_1_fu_360_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond1_fu_285_p2))) begin
        tmp_109_reg_543 <= tmp_109_fu_314_p2;
        tmp_129_reg_538 <= tmp_129_fu_311_p1;
        tmp_130_reg_548 <= tmp_130_fu_319_p1;
        tmp_131_reg_553 <= tmp_131_fu_323_p1;
        tmp_132_reg_558 <= tmp_132_fu_327_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~((1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) | (1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done)))) begin
        tmp_126_reg_507 <= tmp_126_fu_259_p1;
        tmp_reg_502 <= grp_v_tpg_reg_unsigned_short_s_fu_247_ap_return;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1)))) begin
        AXI_video_strm_TDATA_blk_n = AXI_video_strm_V_data_V_1_state[1'b1];
    end else begin
        AXI_video_strm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_data_V_1_sel)) begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_B;
    end else begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_last_V_1_sel)) begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_B;
    end else begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_user_V_1_sel)) begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_B;
    end else begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b1;
    end else begin
        AXI_video_strm_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_466) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_504) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_524) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_550) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_563) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        mapComp_ce0 = 1'b1;
    end else begin
        mapComp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))))) begin
        strmPix_V_val_0_V0_update = 1'b1;
    end else begin
        strmPix_V_val_0_V0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587))) begin
        strmPix_V_val_0_V_blk_n = strmPix_V_val_0_V_empty_n;
    end else begin
        strmPix_V_val_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587))) begin
        strmPix_V_val_1_V_blk_n = strmPix_V_val_1_V_empty_n;
    end else begin
        strmPix_V_val_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond3_reg_587))) begin
        strmPix_V_val_2_V_blk_n = strmPix_V_val_2_V_empty_n;
    end else begin
        strmPix_V_val_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_492) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~((1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_247_ap_done) | (1'b0 == grp_v_tpg_reg_unsigned_short_s_fu_253_ap_done))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond1_fu_285_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : begin
            if ((~(1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((1'b0 == exitcond2_fu_396_p2) & ~ap_sig_578)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_pp0_stg0_fsm_5 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond3_fu_411_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_589 | ((1'b0 == exitcond3_reg_587) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in)))) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond3_reg_587_pp0_iter1) & (1'b0 == AXI_video_strm_V_data_V_1_ack_in))) & ~(1'b0 == exitcond3_fu_411_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_TDATA = AXI_video_strm_V_data_V_1_data_out;

assign AXI_video_strm_TDEST = AXI_video_strm_V_dest_V_1_data_out;

assign AXI_video_strm_TID = AXI_video_strm_V_id_V_1_data_out;

assign AXI_video_strm_TKEEP = AXI_video_strm_V_keep_V_1_data_out;

assign AXI_video_strm_TLAST = AXI_video_strm_V_last_V_1_data_out;

assign AXI_video_strm_TSTRB = AXI_video_strm_V_strb_V_1_data_out;

assign AXI_video_strm_TUSER = AXI_video_strm_V_user_V_1_data_out;

assign AXI_video_strm_TVALID = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_data_V_1_ack_in = AXI_video_strm_V_data_V_1_state[1'b1];

assign AXI_video_strm_V_data_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_data_V_1_load_A = (AXI_video_strm_V_data_V_1_state_cmp_full & ~AXI_video_strm_V_data_V_1_sel_wr);

assign AXI_video_strm_V_data_V_1_load_B = (AXI_video_strm_V_data_V_1_sel_wr & AXI_video_strm_V_data_V_1_state_cmp_full);

assign AXI_video_strm_V_data_V_1_sel = AXI_video_strm_V_data_V_1_sel_rd;

assign AXI_video_strm_V_data_V_1_state_cmp_full = ((AXI_video_strm_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_data_V_1_vld_out = AXI_video_strm_V_data_V_1_state[1'b0];

assign AXI_video_strm_V_dest_V_1_ack_in = AXI_video_strm_V_dest_V_1_state[1'b1];

assign AXI_video_strm_V_dest_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_dest_V_1_data_out = 1'b0;

assign AXI_video_strm_V_dest_V_1_sel = AXI_video_strm_V_dest_V_1_sel_rd;

assign AXI_video_strm_V_dest_V_1_vld_out = AXI_video_strm_V_dest_V_1_state[1'b0];

assign AXI_video_strm_V_id_V_1_ack_in = AXI_video_strm_V_id_V_1_state[1'b1];

assign AXI_video_strm_V_id_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_id_V_1_data_out = 1'b0;

assign AXI_video_strm_V_id_V_1_sel = AXI_video_strm_V_id_V_1_sel_rd;

assign AXI_video_strm_V_id_V_1_vld_out = AXI_video_strm_V_id_V_1_state[1'b0];

assign AXI_video_strm_V_keep_V_1_ack_in = AXI_video_strm_V_keep_V_1_state[1'b1];

assign AXI_video_strm_V_keep_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_keep_V_1_data_out = ap_const_lv3_7;

assign AXI_video_strm_V_keep_V_1_sel = AXI_video_strm_V_keep_V_1_sel_rd;

assign AXI_video_strm_V_keep_V_1_vld_out = AXI_video_strm_V_keep_V_1_state[1'b0];

assign AXI_video_strm_V_last_V_1_ack_in = AXI_video_strm_V_last_V_1_state[1'b1];

assign AXI_video_strm_V_last_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_last_V_1_load_A = (AXI_video_strm_V_last_V_1_state_cmp_full & ~AXI_video_strm_V_last_V_1_sel_wr);

assign AXI_video_strm_V_last_V_1_load_B = (AXI_video_strm_V_last_V_1_sel_wr & AXI_video_strm_V_last_V_1_state_cmp_full);

assign AXI_video_strm_V_last_V_1_sel = AXI_video_strm_V_last_V_1_sel_rd;

assign AXI_video_strm_V_last_V_1_state_cmp_full = ((AXI_video_strm_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_last_V_1_vld_out = AXI_video_strm_V_last_V_1_state[1'b0];

assign AXI_video_strm_V_strb_V_1_ack_in = AXI_video_strm_V_strb_V_1_state[1'b1];

assign AXI_video_strm_V_strb_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_strb_V_1_data_out = ap_const_lv3_0;

assign AXI_video_strm_V_strb_V_1_sel = AXI_video_strm_V_strb_V_1_sel_rd;

assign AXI_video_strm_V_strb_V_1_vld_out = AXI_video_strm_V_strb_V_1_state[1'b0];

assign AXI_video_strm_V_user_V_1_ack_in = AXI_video_strm_V_user_V_1_state[1'b1];

assign AXI_video_strm_V_user_V_1_ack_out = AXI_video_strm_TREADY;

assign AXI_video_strm_V_user_V_1_load_A = (AXI_video_strm_V_user_V_1_state_cmp_full & ~AXI_video_strm_V_user_V_1_sel_wr);

assign AXI_video_strm_V_user_V_1_load_B = (AXI_video_strm_V_user_V_1_sel_wr & AXI_video_strm_V_user_V_1_state_cmp_full);

assign AXI_video_strm_V_user_V_1_sel = AXI_video_strm_V_user_V_1_sel_rd;

assign AXI_video_strm_V_user_V_1_state_cmp_full = ((AXI_video_strm_V_user_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign AXI_video_strm_V_user_V_1_vld_out = AXI_video_strm_V_user_V_1_state[1'b0];

always @ (*) begin
    ap_sig_24 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_466 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_492 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_504 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_524 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_550 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_563 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_578 = ((AXI_video_strm_V_data_V_1_ack_in == 1'b0) | (AXI_video_strm_V_keep_V_1_ack_in == 1'b0) | (AXI_video_strm_V_strb_V_1_ack_in == 1'b0) | (AXI_video_strm_V_user_V_1_ack_in == 1'b0) | (AXI_video_strm_V_last_V_1_ack_in == 1'b0) | (AXI_video_strm_V_id_V_1_ack_in == 1'b0) | (AXI_video_strm_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_sig_589 = ((1'b0 == exitcond3_reg_587) & (strmPix_V_val_0_V0_status == 1'b0));
end

assign axi_last_V_fu_422_p2 = ((j_cast_fu_407_p1 == tmp_109_reg_543) ? 1'b1 : 1'b0);

assign exitcond1_fu_285_p2 = ((i_reg_213 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_396_p2 = ((i1_cast_fu_392_p1 == tmp_129_reg_538) ? 1'b1 : 1'b0);

assign exitcond3_fu_411_p2 = ((j_cast_fu_407_p1 == tmp_126_reg_507) ? 1'b1 : 1'b0);

assign grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start = ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_247_ap_start;

assign grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start = ap_reg_grp_v_tpg_reg_unsigned_short_s_fu_253_ap_start;

assign i1_cast_fu_392_p1 = i1_reg_225;

assign i_1_fu_291_p2 = (i_reg_213 + ap_const_lv2_1);

assign i_2_fu_401_p2 = (i1_reg_225 + ap_const_lv11_1);

assign j_1_fu_416_p2 = (j_reg_236 + ap_const_lv11_1);

assign j_cast_fu_407_p1 = j_reg_236;

assign mapComp_address0 = tmp_28_cast_fu_306_p1;

assign map_0_V_cast_fu_336_p1 = mapComp_q0;

assign map_2_V_1_fu_360_p3 = ((sel_tmp2_fu_354_p2[0:0] === 1'b1) ? map_V_2_s_reg_177 : map_2_V_fu_346_p3);

assign map_2_V_2_fu_368_p3 = ((sel_tmp_fu_340_p2[0:0] === 1'b1) ? map_0_V_cast_fu_336_p1 : map_V_1_s_reg_189);

assign map_2_V_3_fu_376_p3 = ((sel_tmp2_fu_354_p2[0:0] === 1'b1) ? map_V_1_s_reg_189 : map_2_V_2_fu_368_p3);

assign map_2_V_5_fu_384_p3 = ((sel_tmp2_fu_354_p2[0:0] === 1'b1) ? map_0_V_cast_fu_336_p1 : map_2_V_4_reg_201);

assign map_2_V_fu_346_p3 = ((sel_tmp_fu_340_p2[0:0] === 1'b1) ? map_V_2_s_reg_177 : map_0_V_cast_fu_336_p1);

assign p_shl_cast_fu_271_p3 = {{tmp_128_fu_267_p1}, {ap_const_lv2_0}};

assign sel_tmp2_fu_354_p2 = ((i_reg_213 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_340_p2 = ((i_reg_213 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign strmPix_V_val_0_V0_status = (strmPix_V_val_0_V_empty_n & strmPix_V_val_1_V_empty_n & strmPix_V_val_2_V_empty_n);

assign strmPix_V_val_0_V_read = strmPix_V_val_0_V0_update;

assign strmPix_V_val_1_V_read = strmPix_V_val_0_V0_update;

assign strmPix_V_val_2_V_read = strmPix_V_val_0_V0_update;

assign tmp_109_fu_314_p2 = ($signed(ap_const_lv12_FFF) + $signed(tmp_126_reg_507));

assign tmp_112_cast_fu_297_p1 = i_reg_213;

assign tmp_126_fu_259_p1 = grp_v_tpg_reg_unsigned_short_s_fu_253_ap_return[11:0];

assign tmp_127_fu_263_p1 = colorFormat[4:0];

assign tmp_128_fu_267_p1 = colorFormat[2:0];

assign tmp_129_fu_311_p1 = tmp_reg_502[11:0];

assign tmp_130_fu_319_p1 = map_2_V_4_reg_201[1:0];

assign tmp_131_fu_323_p1 = map_V_1_s_reg_189[1:0];

assign tmp_132_fu_327_p1 = map_V_2_s_reg_177[1:0];

assign tmp_27_fu_279_p2 = (p_shl_cast_fu_271_p3 - tmp_127_fu_263_p1);

assign tmp_28_cast_fu_306_p1 = $signed(tmp_28_fu_301_p2);

assign tmp_28_fu_301_p2 = (tmp_27_fu_279_p2 + tmp_112_cast_fu_297_p1);

assign tmp_data_V_fu_476_p4 = {{{tmp_21_fu_465_p5}, {tmp_20_fu_454_p5}}, {tmp_19_fu_443_p5}};

endmodule //QuadSLAM_BD_v_tpg_0_1_v_tpg_MultiPixStream2AXIvideo
